{"version":3,"sources":["ui/pages/PassRecover/PassRecover.module.css","ui/pages/Profile/Profile.module.css","ui/pages/Register/Register.module.css","ui/pages/404/Error404.module.css","common/components/SuperInputText/SuperInputText.module.css","common/components/SuperButton/SuperButton.module.css","common/components/SuperCheckbox/SuperCheckbox.module.css","common/components/LoadingLine/LoadingLine.module.css","ui/pages/CheckEmail/CheckMail.module.css","ui/pages/Login/Login.module.css","ui/pages/404/404.png","ui/pages/404/Error404.tsx","common/components/SuperButton/SuperButton.tsx","common/components/SuperInputText/SuperInputText.tsx","common/components/SuperCheckbox/SuperCheckbox.tsx","dal/api/api.ts","bll/appReducer.ts","bll/profileReducer.ts","bll/loginReducer.ts","ui/pages/Login/Login.tsx","bll/registerReducer.ts","ui/pages/Register/Registration.tsx","ui/pages/NewPass/NewPass.tsx","bll/passRecoverReducer.ts","common/components/LoadingLine/LoadingLine.tsx","ui/pages/PassRecover/PassRecover.tsx","ui/pages/Profile/Profile.tsx","ui/pages/CheckEmail/CheckEmail.tsx","ui/App/App.tsx","reportWebVitals.ts","bll/newPassReducer.ts","bll/store.ts","index.tsx"],"names":["module","exports","Error404","className","s","wrapper","error","image","src","alt","width","text","to","home","SuperButton","red","restProps","finalClassName","default","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","spanClassName","finalSpanClassName","finalInputClassName","input","errorInput","superInput","e","currentTarget","value","key","placeholder","SuperCheckbox","onChangeChecked","labelClassName","children","checkbox","finalLabelClassName","label","checked","instance","axios","create","baseURL","withCredentials","api","data","post","put","passRecoverMail","email","from","message","initialState","loading","setAppLoading","_id","name","avatar","publicCardPacksCount","isAdmin","verified","rememberMe","token","created","updated","setProfileData","updateProfileData","setProfileError","updateProfile","dispatch","a","response","console","log","updatedUser","isAxiosError","isLoggedIn","setLoginError","Login","useDispatch","useSelector","state","loginPage","useState","setEmail","password","setPassword","setRememberMe","emailError","setEmailError","passwordError","setPasswordError","submitHandler","test","length","styles","loginSection","loginArticle","loginForm","usernameWrapper","username","passwordWrapper","checkboxRemember","remember","onClick","submit","reset","errorRegister","isRegistered","setRegisterError","Registration","registerPage","passwordCheck","setPasswordCheck","registration","registerSection","registerArticle","registerForm","statusText","isEmailValid","isPassValid","passwordRegExp","NewPass","useParams","newPassword","setNewPassword","passRecoverSection","passRecoverArticle","passRecoverForm","event","sendInstructions","mailSent","errorResponse","LoadingLine","loadingLine","line","shadow","PassRecover","recoverPassMail","setRecoverPassMail","navigate","useNavigate","status","app","recoverPassState","recoverPassPage","disabled","Profile","profileName","profilePage","profileAvatar","profileEmail","setName","setAvatar","profile","profileSection","profileArticle","profileForm","info","inputs","CheckEmail","checkMailSection","checkMailArticle","checkMailForm","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","newPassPage","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be3408b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"passRecoverSection\":\"PassRecover_passRecoverSection__168Bv\",\"passRecoverArticle\":\"PassRecover_passRecoverArticle__3YNSB\",\"passRecoverLegend\":\"PassRecover_passRecoverLegend__Sfpmm\",\"passRecoverForm\":\"PassRecover_passRecoverForm__3hl_5\",\"email\":\"PassRecover_email__3tqzh\",\"sendInstructions\":\"PassRecover_sendInstructions__1jQst\",\"error\":\"PassRecover_error__3V4V4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2MA_a\",\"profileSection\":\"Profile_profileSection__2JDVV\",\"profileArticle\":\"Profile_profileArticle__2Whmv\",\"profileForm\":\"Profile_profileForm__2mLwb\",\"inputs\":\"Profile_inputs__boQBK\",\"submit\":\"Profile_submit___Et-p\",\"inputStyle\":\"Profile_inputStyle__17GRI\",\"error\":\"Profile_error__BPh_U\",\"avatar\":\"Profile_avatar__okiib\",\"info\":\"Profile_info__BE9gG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration\":\"Register_registration__mAY2U\",\"registerSection\":\"Register_registerSection__PmK9a\",\"registerArticle\":\"Register_registerArticle__26RrR\",\"registerForm\":\"Register_registerForm__2lrXG\",\"email\":\"Register_email__3L_DZ\",\"password\":\"Register_password__3BRg7\",\"submit\":\"Register_submit__3QlRa\",\"inputStyle\":\"Register_inputStyle__POmBo\",\"error\":\"Register_error__xyJ6M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Error404_wrapper__3XoOe\",\"error\":\"Error404_error__2qreX\",\"home\":\"Error404_home__2IoEE\",\"text\":\"Error404_text__2Xe4f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__1N21f\",\"errorInput\":\"SuperInputText_errorInput__2Aa0j\",\"error\":\"SuperInputText_error__3crER\",\"superInput\":\"SuperInputText_superInput__20qqK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2rk-j\",\"red\":\"SuperButton_red__2T61F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__2qv2l\",\"spanClassName\":\"SuperCheckbox_spanClassName__XqaW5\",\"checkbox\":\"SuperCheckbox_checkbox__2_Goo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingLine\":\"LoadingLine_loadingLine__Jh-1D\",\"line\":\"LoadingLine_line__G1XBD\",\"loading\":\"LoadingLine_loading__GJ-Mb\",\"shadow\":\"LoadingLine_shadow__2TZ_w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkMailSection\":\"CheckMail_checkMailSection__1t6MP\",\"checkMailArticle\":\"CheckMail_checkMailArticle__15Qr2\",\"checkMailForm\":\"CheckMail_checkMailForm__t1Jab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginSection\":\"Login_loginSection__1Lt3a\",\"loginArticle\":\"Login_loginArticle__1yjlY\",\"loginLegend\":\"Login_loginLegend__3j_3a\",\"loginForm\":\"Login_loginForm__1QakI\",\"usernameWrapper\":\"Login_usernameWrapper__15ZBA\",\"passwordWrapper\":\"Login_passwordWrapper__1vPPn\",\"username\":\"Login_username__16UyZ\",\"password\":\"Login_password__eJ7BC\",\"remember\":\"Login_remember__b-MMo\",\"checkbox\":\"Login_checkbox__3uCiw\",\"checkboxRemember\":\"Login_checkboxRemember__Z5-9S\",\"submit\":\"Login_submit__24XFT\",\"reset\":\"Login_reset__3qKuQ\",\"error\":\"Login_error__xWLq6\"};","export default __webpack_public_path__ + \"static/media/404.9494ad47.png\";","import React from 'react'\r\nimport s from './Error404.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport error from './404.png';\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={s.wrapper}>\r\n\r\n            <div className={s.error}>\r\n                <span>4</span>\r\n                <img className={s.image} src={error} alt=\"404\" width={'200px'}/>\r\n                <span>4</span>\r\n            </div>\r\n            <p className={s.text}>\r\n                The page you are looking <span>NOT FOUND!</span> So sad...\r\n            </p>\r\n\r\n            <NavLink to={'/'} className={s.home}>Return Home</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? `${s.red} ${s.default}` : s.default} ${className}`\r\n    //${s.button} ${red ? s.red : s.default} ${className}\r\n\r\n    return (\r\n            <button\r\n                className={finalClassName}\r\n                {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n            />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}`// need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                placeholder={'Type some text'}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n\r\n            {error && <div className={finalSpanClassName}>{error}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n    labelClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName, labelClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${className ? className : s.checkbox}`\r\n    const finalSpanClassName = `${spanClassName ? spanClassName : s.spanClassName}`\r\n    const finalLabelClassName = `${labelClassName ? labelClassName : s.label}`\r\n\r\n    return (\r\n        <label className={finalLabelClassName}>\r\n            <input type={'checkbox'}\r\n                   onChange={onChangeCallback}\r\n                   className={finalInputClassName}\r\n\r\n                   {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={finalSpanClassName}>{children}</span>}\r\n            {/*благодаря label нажатие на спан передастся в инпут*/}\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import axios, {AxiosResponse} from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true,\r\n})\r\n\r\nexport const api = {\r\n    login(data: LoginRequestType) {\r\n        return instance.post<LoginRequestType,\r\n            AxiosResponse<LoginResponseType>>(`auth/login`, {...data})\r\n    },\r\n    register(data: RegisterRequestType) {\r\n        return instance.post<RegisterRequestType,\r\n            AxiosResponse<RegisterResponseType>>(`auth/register`, data)\r\n    },\r\n    mePost(data: MePostRequestType) {\r\n        return instance.post<MePostRequestType,\r\n            AxiosResponse<MePostResponseType>>(`auth/me`, data)\r\n    },\r\n    mePut(data: MePutRequestType) {\r\n        return instance.put<MePutRequestType,\r\n            AxiosResponse<MePutResponseType>>(`auth/me`, data)\r\n    },\r\n    meDelete(data: MeDeleteRequestType) {\r\n        return instance.delete<MeDeleteRequestType,\r\n            AxiosResponse<MeDeleteResponseType>>(`auth/me`, data)\r\n    },\r\n    meUpdate(data: MeUpdateRequestType) {\r\n        return instance.put<MeUpdateRequestType,\r\n            AxiosResponse<MeUpdateResponseType>>(`auth/me`, data)\r\n    },\r\n    forgotPassword(passRecoverMail: string) {\r\n        return axios.post<ForgotRequestType,\r\n            AxiosResponse<ForgotResponseType>>(`https://neko-back.herokuapp.com/2.0/auth/forgot`, {\r\n            withCredentials: true,\r\n            email: passRecoverMail,\r\n            from: \"maxim.kornienkou@gmail.com\",\r\n            message: `<div>password recovery link: <a href=\"http://localhost:3000/#/set-new-password/$token$\">\r\n                                                    Click on this link to create a new password\r\n                                                    </a></div>`,\r\n        })\r\n    },\r\n    setNewPassword(data: SetNewPasswordRequestType) {\r\n        return instance.post<SetNewPasswordRequestType,\r\n            AxiosResponse<SetNewPasswordResponseType>>(`auth/set-new-password`, data)\r\n    },\r\n}\r\n\r\nexport type LoginRequestType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\nexport type MeUpdateResponseType = {\r\n    updatedUser: LoginResponseType // весь user {}\r\n}\r\nexport type LoginResponseType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n    error?: string;\r\n}\r\nexport type MeUpdateRequestType = {\r\n    name?: string\r\n    avatar?: string\r\n}\r\nexport type RegisterRequestType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type RegisterResponseType = {\r\n    addedUser: {}\r\n    error?: string;\r\n}\r\nexport type MePostRequestType = {}\r\nexport type MePostResponseType = LoginResponseType\r\nexport type MePutRequestType = {\r\n    name: string\r\n    avatar: string\r\n}\r\nexport type MePutResponseType = {\r\n    updatedUser: LoginResponseType // весь user {}\r\n    error?: string\r\n}\r\nexport type MeDeleteRequestType = {}\r\nexport type MeDeleteResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\nexport type ForgotRequestType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n}\r\nexport type ForgotResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\nexport type SetNewPasswordRequestType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\nexport type SetNewPasswordResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\n","const initialState: InitialStateType = {\r\n    loading: false,\r\n    error: null,\r\n}\r\n\r\nexport const appReducer = (state = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"APP/SET_LOADING_STATUS\":\r\n            return {...state, loading: action.value}\r\n        case \"APP/SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAppLoading = (value: boolean) => ({type: 'APP/SET_LOADING_STATUS', value} as const)\r\nexport const setAppError = (error: string | null) => ({type: 'APP/SET-ERROR', error} as const)\r\n\r\n\r\ntype AppActionsType = ReturnType<typeof setAppLoading> | ReturnType<typeof setAppError>\r\n// export type AppLoading = Re\r\n\r\ntype InitialStateType = {\r\n    loading: boolean,\r\n    error: null | string,\r\n}","import {api, LoginResponseType, MeUpdateRequestType} from \"../dal/api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport axios from \"axios\";\r\nimport {setAppLoading} from \"./appReducer\";\r\n\r\nconst initialState: ProfileInitialStateType = {\r\n    _id: '',\r\n    email: '',\r\n    name: '',\r\n    avatar: '',\r\n    publicCardPacksCount: 0,\r\n    isAdmin: false,\r\n    verified: false,\r\n    rememberMe: false,\r\n    error: '',\r\n    token: '',\r\n    created: null,\r\n    updated: null,\r\n}\r\nexport const profileReducer = (state = initialState, action: ProfileActionsType): ProfileInitialStateType => {\r\n    switch (action.type) {\r\n        case \"PROFILE/SET-PROFILE-DATA\":\r\n            return {...state, ...action.data}\r\n        case \"PROFILE/UPDATE-PROFILE-DATA\":\r\n            return {...state, name: action.data.name, avatar: action.data.avatar}\r\n        case \"PROFILE/SET-PROFILE-ERROR\":\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setProfileData = (data: ProfileInitialStateType) => {\r\n    return {type: 'PROFILE/SET-PROFILE-DATA', data} as const\r\n}\r\nexport const updateProfileData = (data: LoginResponseType) => {\r\n    return {type: 'PROFILE/UPDATE-PROFILE-DATA', data} as const\r\n}\r\nexport const setProfileError = (error: string) => {\r\n    return {type: 'PROFILE/SET-PROFILE-ERROR', error} as const\r\n}\r\n\r\n\r\nexport const updateProfile = (data: MeUpdateRequestType) => async (dispatch: Dispatch) => {\r\n    dispatch(setAppLoading(true));\r\n    try {\r\n        const response = await api.meUpdate(data);\r\n        console.log(response.data)\r\n        dispatch(updateProfileData(response.data.updatedUser));\r\n    } catch (error) {\r\n        if (axios.isAxiosError(error) && error.response) {\r\n            dispatch(setProfileError(error.response.data.error));\r\n        }\r\n    } finally {\r\n        dispatch(setAppLoading(false));\r\n    }\r\n}\r\n\r\n\r\nexport type ProfileActionsType = ReturnType<typeof setProfileData>\r\n    | ReturnType<typeof updateProfileData> | ReturnType<typeof setProfileError>\r\n\r\n\r\nexport type ProfileInitialStateType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    token?: string\r\n    created: Date | null\r\n    updated: Date | null\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error?: string\r\n}\r\n","import {api, LoginRequestType} from \"../dal/api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport axios from \"axios\";\r\nimport {setAppLoading} from \"./appReducer\";\r\nimport {setProfileData} from \"./profileReducer\";\r\n\r\nconst initialState: InitialStateType = {\r\n    isLoggedIn: false,\r\n    rememberMe: false,\r\n    error: '',\r\n}\r\n\r\nexport const loginReducer = (state = initialState, action: LoginActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"LOGIN/SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"LOGIN/SET-LOGGED-IN\":\r\n            return {...state, isLoggedIn: true}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setLoginError = (error: string) => ({type: 'LOGIN/SET-ERROR', error} as const)\r\nexport const setLoggedIn = () => ({type: 'LOGIN/SET-LOGGED-IN'} as const)\r\n\r\nexport const logIn = (data: LoginRequestType) => async (dispatch: Dispatch) => {\r\n    dispatch(setAppLoading(true));\r\n    try {\r\n        const response = await api.login(data);\r\n        response && dispatch(setLoggedIn());\r\n        dispatch(setProfileData(response.data)); // Инфа для профиля\r\n    } catch (error) {\r\n        if (axios.isAxiosError(error) && error.response) {\r\n            dispatch(setLoginError(error.response.data.error));\r\n        } else {\r\n            dispatch(setLoginError('Unknown error. Try again later'))\r\n        }\r\n    } finally {\r\n        dispatch(setAppLoading(false));\r\n    }\r\n}\r\n\r\ntype LoginActionsType = ReturnType<typeof setLoginError> | ReturnType<typeof setLoggedIn>\r\n\r\ntype InitialStateType = {\r\n    isLoggedIn: boolean\r\n    rememberMe: boolean\r\n    error: string\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport SuperButton from \"../../../common/components/SuperButton/SuperButton\";\r\nimport SuperInputText from \"../../../common/components/SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../../../common/components/SuperCheckbox/SuperCheckbox\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {logIn} from \"../../../bll/loginReducer\";\r\nimport {Link, Navigate} from \"react-router-dom\";\r\nimport styles from './Login.module.css';\r\n\r\n\r\nexport const Login = () => {\r\n    const dispatch = useDispatch();\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.loginPage.isLoggedIn);\r\n    const error = useSelector<AppStoreType, string>(state => state.loginPage.error);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [rememberMe, setRememberMe] = useState(false);\r\n    const [emailError, setEmailError] = useState('')\r\n    const [passwordError, setPasswordError] = useState('')\r\n\r\n    const submitHandler = () => {\r\n        if (!email) {\r\n            setEmailError('Email is required!');\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n            setEmailError('Invalid email address');\r\n        } else if (!password) {\r\n            setPasswordError('Password is required!')\r\n        } else if (password.length <= 7) {\r\n            setPasswordError('Invalid password');\r\n        } else {\r\n            dispatch(logIn({email, password, rememberMe}));\r\n        }\r\n    }\r\n\r\n    const onChangeEmailHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value);\r\n        setEmailError('');\r\n    }\r\n    const onChangePasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value);\r\n        setPasswordError('');\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n        return <Navigate to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <section className={styles.loginSection}>\r\n            <article className={styles.loginArticle}>\r\n                <h3>Login to Web App</h3>\r\n                <div className={styles.loginForm}>\r\n                    <div className={styles.usernameWrapper}>\r\n                        <SuperInputText onEnter={submitHandler} className={styles.username}\r\n                                        spanClassName={styles.error}\r\n                                        error={emailError}\r\n                                        onChange={onChangeEmailHandler}\r\n                                        type=\"text\"\r\n                                        placeholder=\"Email\"/>\r\n                    </div>\r\n                    <div className={styles.passwordWrapper}>\r\n                        <SuperInputText onEnter={submitHandler}\r\n                                        className={styles.password}\r\n                                        spanClassName={styles.error}\r\n                                        error={passwordError || error}\r\n                                        onChange={onChangePasswordHandler}\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"/>\r\n                    </div>\r\n                    <div className={styles.checkboxRemember}>\r\n                        <SuperCheckbox className={styles.checkbox}\r\n                                       spanClassName={styles.remember}\r\n                                       onChangeChecked={setRememberMe}>\r\n                            Remember me on this computer\r\n                        </SuperCheckbox>\r\n                    </div>\r\n                    <SuperButton onClick={submitHandler} className={styles.submit}>Login</SuperButton>\r\n                </div>\r\n            </article>\r\n            <div className={styles.reset}>\r\n                Forgot your password? <Link to={`/pass_recovery`}>Click here</Link> to reset it or you can\r\n                register <Link to={'/registration'}>here.</Link>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {api} from \"../dal/api/api\";\r\nimport axios from \"axios\";\r\nimport {setAppLoading} from \"./appReducer\";\r\n\r\nconst initialState: InitialStateType = {\r\n    errorRegister: null,\r\n    isRegistered: false\r\n}\r\nexport const registerReducer = (state = initialState, action: RegisterActionsType) => {\r\n    switch (action.type) {\r\n        case \"REGISTER/SET_REGISTER\":\r\n            return {...state, isRegistered: action.value}\r\n        case \"REGISTER/SET_ERROR\":\r\n            return {...state, errorRegister: action.errorRegister}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst setRegister = (value: boolean) =>\r\n    ({type: 'REGISTER/SET_REGISTER', value} as const)\r\n\r\nexport const setRegisterError = (errorRegister: any) =>\r\n    ({type: 'REGISTER/SET_ERROR', errorRegister} as const)\r\n\r\nexport const register = (data: RegisterDataType) => async (dispatch: Dispatch) => {\r\n    dispatch(setAppLoading(true))\r\n    try {\r\n        const response = await api.register(data)\r\n        if (response.statusText === 'Created') {\r\n            dispatch(setRegister(true))\r\n        }\r\n    } catch (error) {\r\n        if (axios.isAxiosError(error) && error.response) {\r\n            if (error.response.data.isEmailValid && !error.response.data.isPassValid) {\r\n                dispatch(setRegisterError(error.response.data.passwordRegExp))\r\n            } else {\r\n                dispatch(setRegisterError(error.response.data.error))\r\n            }\r\n        }\r\n    } finally {\r\n        dispatch(setAppLoading(false))\r\n    }\r\n}\r\n\r\ntype SetRegisterAction = ReturnType<typeof setRegister>\r\ntype SetErrorAction = ReturnType<typeof setRegisterError>\r\ntype RegisterActionsType = SetRegisterAction | SetErrorAction\r\nexport type RegisterDataType = {\r\n    email: string\r\n    password: string\r\n}\r\ntype InitialStateType = { errorRegister: string | null, isRegistered: boolean }\r\n","import React, {useState} from \"react\";\r\nimport SuperInputText from \"../../../common/components/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../common/components/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {register, setRegisterError} from \"../../../bll/registerReducer\";\r\nimport styles from \"./Register.module.css\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\nexport const Registration = () => {\r\n    const dispatch = useDispatch();\r\n    const isRegistered = useSelector<AppStoreType, boolean>(state => state.registerPage.isRegistered);\r\n    const error = useSelector<AppStoreType, string>(state => state.registerPage.errorRegister);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passwordCheck, setPasswordCheck] = useState('');\r\n\r\n    const onSubmit = () => {\r\n        if (!email || !password) {\r\n            dispatch(setRegisterError('Email and password is required!'));\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n            dispatch(setRegisterError('Invalid email address'));\r\n        } else if (password.length <= 7) {\r\n            dispatch(setRegisterError('Invalid password'));\r\n        } else if (password !== passwordCheck) {\r\n            dispatch(setRegisterError('Passwords must match'));\r\n        } else {\r\n            dispatch(register({email, password}));\r\n        }\r\n    }\r\n\r\n    if (isRegistered) {\r\n        return <Navigate to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.registration}>\r\n            <section className={styles.registerSection}>\r\n                <article className={styles.registerArticle}>\r\n                    <h3>Registration</h3>\r\n                    <div className={styles.registerForm}>\r\n                        <div>\r\n                            <SuperInputText\r\n                                className={styles.email}\r\n                                name={'email'}\r\n                                type={'text'}\r\n                                value={email}\r\n                                onChangeText={setEmail}\r\n                                placeholder={'Email'}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <SuperInputText\r\n                                className={styles.password}\r\n                                name={'password'}\r\n                                type={'password'}\r\n                                value={password}\r\n                                onChangeText={setPassword}\r\n                                placeholder={'Password'}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <SuperInputText\r\n                                className={styles.password}\r\n                                name={'passwordControl'}\r\n                                type={'password'}\r\n                                value={passwordCheck}\r\n                                onChangeText={setPasswordCheck}\r\n                                placeholder={'Password'}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <SuperButton\r\n                                className={styles.submit}\r\n                                onClick={onSubmit}\r\n                                // disabled={isDisabled}\r\n                            >Sign in</SuperButton>\r\n                        </div>\r\n                    </div>\r\n                </article>\r\n                {/*{error && <div className={sc.error}>Error: {error}</div>}*/}\r\n\r\n                {error && <div className={styles.error}>{error}</div>}\r\n            </section>\r\n        </div>\r\n    );\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport styles from \"../PassRecover/PassRecover.module.css\";\r\nimport SuperInputText from \"../../../common/components/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../common/components/SuperButton/SuperButton\";\r\n\r\nexport const NewPass = () => {\r\n\r\n    const {token} = useParams()\r\n\r\n    const [newPassword, setNewPassword] = useState<string>(\"\")\r\n\r\n    const onChangeNewPassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setNewPassword(event.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <section className={styles.passRecoverSection}>\r\n                <article className={styles.passRecoverArticle}>\r\n                    <h3>Password Recovery</h3>\r\n                    <div className={styles.passRecoverForm}>\r\n                        <div>\r\n                            <SuperInputText\r\n                                className={styles.email}\r\n                                name={'email'}\r\n                                type={'text'}\r\n                                value={newPassword}\r\n                                onChange={onChangeNewPassword}\r\n                                placeholder={'Email'}\r\n                                // error={recoverPassState.error}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <SuperButton className={styles.sendInstructions}\r\n                                         // onClick={onClickSendInstructions}\r\n                                         // disabled={status === \"loading\"}\r\n                            >\r\n                                Send instructions\r\n                            </SuperButton>\r\n                        </div>\r\n                    </div>\r\n                </article>\r\n            </section>\r\n        </div>\r\n    );\r\n}","import axios from \"axios\";\r\nimport {Dispatch} from \"redux\";\r\nimport {api} from \"../dal/api/api\";\r\nimport {setAppLoading} from \"./appReducer\";\r\n\r\nconst initialState: InitialStateType = {\r\n    mailSent: false,\r\n    error: \"\",\r\n}\r\n\r\nexport const recoverPassReducer = (state = initialState, action: RecoverPassActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"PASS_RECOVER/SET-MAIL-SENT\":\r\n            return {...state, mailSent: action.value}\r\n        case \"PASS_RECOVER/SET-ERROR-RESPONSE\":\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const mailSent = (value: boolean) => ({type: \"PASS_RECOVER/SET-MAIL-SENT\", value} as const);\r\nexport const errorResponse = (error: string) => ({type: \"PASS_RECOVER/SET-ERROR-RESPONSE\", error} as const);\r\n\r\nexport const recoveryPass = (passRecoverMail: string) => async (dispatch: Dispatch) => {\r\n\r\n    dispatch(setAppLoading(true));\r\n\r\n    try {\r\n        const response = await api.forgotPassword(passRecoverMail);\r\n        response && dispatch(mailSent(true));\r\n    } catch (error) {\r\n        if (axios.isAxiosError(error) && error.response) {\r\n            dispatch(errorResponse(error.response.data.error));\r\n        }\r\n    } finally {\r\n        dispatch(setAppLoading(false));\r\n    }\r\n}\r\n\r\nexport type RecoverPassActionsType = ReturnType<typeof mailSent>\r\n    | ReturnType<typeof errorResponse>\r\n\r\nexport type InitialStateType = {\r\n    mailSent: boolean,\r\n    error: string,\r\n}\r\n","import styles from './LoadingLine.module.css'\r\n\r\nexport const LoadingLine = () => {\r\n  return (\r\n    <div className={styles.loadingLine}>\r\n      {/*<h3>Loading is in progress, do not rush, be patient</h3>*/}\r\n      <div className={styles.line}>\r\n        <div className={styles.shadow}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport styles from \"./PassRecover.module.css\";\r\nimport SuperInputText from \"../../../common/components/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../common/components/SuperButton/SuperButton\";\r\nimport {errorResponse, InitialStateType, recoveryPass} from \"../../../bll/passRecoverReducer\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {LoadingLine} from \"../../../common/components/LoadingLine/LoadingLine\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nexport const PassRecover = () => {\r\n\r\n    const [recoverPassMail, setRecoverPassMail] = useState<string>(\"\");\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const status = useSelector<AppStoreType, boolean>(state => state.app.loading);\r\n    const recoverPassState = useSelector<AppStoreType, InitialStateType>(state => state.recoverPassPage);\r\n    const dispatch = useDispatch();\r\n\r\n    const onChangeEnterMail = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setRecoverPassMail(event.currentTarget.value);\r\n        dispatch(errorResponse(\"\"));\r\n    }\r\n\r\n    const onClickSendInstructions = () => {\r\n        dispatch(recoveryPass(recoverPassMail));\r\n    }\r\n\r\n    if (recoverPassState.mailSent) {\r\n        navigate(\"/check-email\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {status && <LoadingLine/>}\r\n            <section className={styles.passRecoverSection}>\r\n                <article className={styles.passRecoverArticle}>\r\n                    <h3>Password Recovery</h3>\r\n                    <div className={styles.passRecoverForm}>\r\n                        <div>\r\n                            <SuperInputText\r\n                                className={styles.email}\r\n                                name={'email'}\r\n                                type={'text'}\r\n                                value={recoverPassMail}\r\n                                onChange={onChangeEnterMail}\r\n                                placeholder={'Email'}\r\n                                error={recoverPassState.error}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <SuperButton className={styles.sendInstructions}\r\n                                         onClick={onClickSendInstructions}\r\n                                         disabled={status}\r\n                            >\r\n                                Send instructions\r\n                            </SuperButton>\r\n                        </div>\r\n                    </div>\r\n                </article>\r\n            </section>\r\n        </div>\r\n    );\r\n}","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {setProfileError, updateProfile} from \"../../../bll/profileReducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport styles from \"./Profile.module.css\";\r\nimport SuperInputText from \"../../../common/components/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../common/components/SuperButton/SuperButton\";\r\n\r\nexport const Profile = () => {\r\n  const dispatch = useDispatch();\r\n  const profileName = useSelector<AppStoreType, string>(state => state.profilePage.name);\r\n  const profileAvatar = useSelector<AppStoreType, string | undefined>(state => state.profilePage.avatar);\r\n  const profileEmail = useSelector<AppStoreType, string>(state => state.profilePage.email);\r\n  const error = useSelector<AppStoreType, string | undefined>(state => state.profilePage.error);\r\n  const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.loginPage.isLoggedIn);\r\n\r\n  const [name, setName] = useState('')\r\n  const [avatar, setAvatar] = useState('')\r\n\r\n  const onSubmit = () => {\r\n    if (name) {\r\n      dispatch(updateProfile({name}));\r\n      setName('');\r\n    } else if (avatar) {\r\n      dispatch(updateProfile({avatar}));\r\n      setAvatar('');\r\n    } else {\r\n      dispatch(setProfileError('Name and avatar required!'));\r\n    }\r\n  }\r\n\r\n  // console.log(isLoggedIn)\r\n\r\n  // if (!isLoggedIn) {\r\n  //   return <Navigate to={'/login'}/>\r\n  // }\r\n\r\n  return (\r\n    // <div className={s.wrapper}>\r\n    //   <img className={s.avatar} src={profileAvatar} alt=\"avatar\"/>\r\n    //   <div>Name: {profileName}</div>\r\n    //   <div>Email: {profileEmail}</div>\r\n    //   <SuperInputText className={s.inputs} placeholder={'Input new name'} value={name} onChangeText={setName}/>\r\n    //   <SuperInputText className={s.inputs} placeholder={'Input avatar link'} value={avatar}\r\n    //                   onChangeText={setAvatar}/>\r\n    //   <SuperButton onClick={onSubmit}>\r\n    //     Submit\r\n    //   </SuperButton>\r\n    //   {error && <div className={sc.error}>{error}</div>}\r\n    // </div>\r\n\r\n  <div className={styles.profile}>\r\n    <section className={styles.profileSection}>\r\n      <article className={styles.profileArticle}>\r\n        <h3>Your profile</h3>\r\n        <div className={styles.profileForm}>\r\n          <div className={styles.avatar}>\r\n            <img src={profileAvatar} alt=\"avatar\"/>\r\n          </div>\r\n          <div className={styles.info}>Your name: {profileName}</div>\r\n          <div className={styles.info}>Your email: {profileEmail}</div>\r\n          <div>\r\n            <SuperInputText\r\n              type={'text'}\r\n              className={styles.inputs}\r\n              placeholder={'Input new name'}\r\n              value={name}\r\n              onChangeText={setName}\r\n            />\r\n          </div>\r\n          <div>\r\n            <SuperInputText\r\n              type={'text'}\r\n              className={styles.inputs}\r\n              placeholder={'Input avatar link'}\r\n              value={avatar}\r\n              onChangeText={setAvatar}\r\n            />\r\n          </div>\r\n          <div>\r\n            <SuperButton\r\n              className={styles.submit}\r\n              onClick={onSubmit}\r\n              // disabled={isDisabled}\r\n            >Change</SuperButton>\r\n          </div>\r\n        </div>\r\n      </article>\r\n      {error && <div className={styles.error}>{error}</div>}\r\n    </section>\r\n  </div>\r\n\r\n);\r\n}","import React from \"react\";\r\nimport styles from \"./CheckMail.module.css\";\r\n\r\n\r\nexport const CheckEmail = () => {\r\n\r\n    return (\r\n        <div>\r\n            <section className={styles.checkMailSection}>\r\n                <article className={styles.checkMailArticle}>\r\n                    <h3>Check your email</h3>\r\n                    <div className={styles.checkMailForm}>\r\n                        Check mail ????\r\n                    </div>\r\n                </article>\r\n            </section>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {Navigate, NavLink, Route, Routes} from 'react-router-dom';\r\nimport './App.css';\r\nimport Error404 from \"../pages/404/Error404\";\r\nimport {Login} from \"../pages/Login/Login\";\r\nimport {Registration} from \"../pages/Register/Registration\";\r\nimport {NewPass} from \"../pages/NewPass/NewPass\";\r\nimport {PassRecover} from \"../pages/PassRecover/PassRecover\";\r\nimport {Profile} from \"../pages/Profile/Profile\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../bll/store\";\r\nimport {LoadingLine} from \"../../common/components/LoadingLine/LoadingLine\";\r\nimport {CheckEmail} from \"../pages/CheckEmail/CheckEmail\";\r\n\r\nfunction App() {\r\n    const loading = useSelector<AppStoreType, boolean>((state) => state.app.loading);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {loading && <LoadingLine/>}\r\n            <Routes>\r\n                <Route path={'/'} element={<Login/>}/>\r\n                <Route path={'login'} element={<Login/>}/>\r\n                <Route path={'profile'} element={<Profile/>}/>\r\n                <Route path={'registration'} element={<Registration/>}/>\r\n                <Route path={'check-email'} element={<CheckEmail/>}/>\r\n                <Route path={'set-new-password/:token'} element={<NewPass/>}/>\r\n                <Route path={'pass_recovery'} element={<PassRecover/>}/>\r\n                <Route path={'404'} element={<Error404/>}/>\r\n                <Route path={'*'} element={<Navigate to={'404'}/>}/>\r\n            </Routes>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {}\r\nexport const newPassReducer = (state = initialState, action: NewPassActionsType) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport type NewPassActionsType = { type: string }","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {loginReducer} from \"./loginReducer\";\r\nimport {newPassReducer} from \"./newPassReducer\";\r\nimport {recoverPassReducer} from \"./passRecoverReducer\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {registerReducer} from \"./registerReducer\";\r\nimport {appReducer} from \"./appReducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    loginPage: loginReducer,\r\n    newPassPage: newPassReducer,\r\n    recoverPassPage: recoverPassReducer,\r\n    profilePage: profileReducer,\r\n    registerPage: registerReducer,\r\n})\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\nexport type AppStoreType = ReturnType<typeof rootReducer>;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './ui/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./bll/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App/>\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}