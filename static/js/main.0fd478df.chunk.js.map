{"version":3,"sources":["ui/pages/Login/Login.module.css","ui/pages/Register/Register.module.css","ui/pages/404/Error404.module.css","common/components/SuperInputText/SuperInputText.module.css","common/components/SuperButton/SuperButton.module.css","common/components/SuperCheckbox/SuperCheckbox.module.css","common/components/loadingLine/LoadingLine.module.css","common/components/SuperRadio/SuperRadio.module.css","common/components/SuperSelect/SuperSelect.module.css","common/components/SuperInputText/SuperInputText.tsx","common/components/SuperButton/SuperButton.tsx","common/components/SuperCheckbox/SuperCheckbox.tsx","common/components/SuperRadio/SuperRadio.tsx","common/components/SuperSelect/SuperSelect.tsx","ui/pages/Test.tsx","ui/pages/404/404.png","ui/pages/404/Error404.tsx","dal/api/api.ts","bll/loginReducer.ts","bll/appReducer.ts","ui/pages/Login/Login.tsx","bll/registerReducer.ts","ui/pages/Register/Registration.tsx","ui/pages/NewPass/NewPass.tsx","ui/pages/PassRecover/PassRecover.tsx","ui/pages/Profile/Profile.tsx","common/components/loadingLine/LoadingLine.tsx","ui/App/App.tsx","reportWebVitals.ts","bll/newPassReducer.ts","bll/passRecoverReducer.ts","bll/profileReducer.ts","bll/store.ts","index.tsx"],"names":["module","exports","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","input","errorInput","superInput","e","currentTarget","value","key","placeholder","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","SuperRadio","name","options","onChangeOption","onChangeCallback","mappedOptions","map","o","i","radio","SuperSelect","select","Test","arr","useState","Error404","wrapper","image","src","alt","width","text","to","home","instance","axios","create","baseURL","withCredentials","api","data","post","initialState","isLoggedIn","loadingStatus","setLoadingStatusAC","Login","inputEmail","setInputEmail","inputPassword","setInputPassword","rememberMe","setRememberMe","dispatch","useDispatch","useSelector","state","loginPage","useNavigate","console","log","onClick","a","isAxiosError","loginTC","email","password","styles","loginSection","loginArticle","loginForm","username","checkboxRemember","remember","htmlFor","submit","reset","href","errorRegister","registerAC","Registration","inputPasswordControl","setInputPasswordControl","registerPage","registration","registerSection","registerArticle","registerForm","response","passwordRegExp","registerTC","alert","NewPass","PassRecover","Profile","LoadingLine","loadingLine","line","shadow","App","app","useEffect","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","newPassPage","recoverPassPage","profilePage","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fd478df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginSection\":\"Login_loginSection__2hVYZ\",\"loginArticle\":\"Login_loginArticle__3FgVE\",\"loginLegend\":\"Login_loginLegend__3RTRr\",\"loginForm\":\"Login_loginForm__2qcL0\",\"username\":\"Login_username__3Cf4j\",\"password\":\"Login_password__1y9ru\",\"remember\":\"Login_remember__vqqTZ\",\"checkbox\":\"Login_checkbox__34px_\",\"checkbox-remember\":\"Login_checkbox-remember__Wrm6k\",\"submit\":\"Login_submit__1ce4K\",\"reset\":\"Login_reset__3_Fdk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration\":\"Register_registration__3IhAr\",\"registerSection\":\"Register_registerSection__3u9M5\",\"registerArticle\":\"Register_registerArticle__1xrf7\",\"registerForm\":\"Register_registerForm__3GHno\",\"email\":\"Register_email__2HT3q\",\"password\":\"Register_password__YFBp-\",\"submit\":\"Register_submit__33PtM\",\"inputStyle\":\"Register_inputStyle__3xZSr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Error404_wrapper__2d16a\",\"error\":\"Error404_error__3DuaN\",\"home\":\"Error404_home__255G1\",\"text\":\"Error404_text__2yaBM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__OH19j\",\"errorInput\":\"SuperInputText_errorInput__1ITHB\",\"error\":\"SuperInputText_error__3MJ7P\",\"superInput\":\"SuperInputText_superInput__3t3hC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__8Sffv\",\"red\":\"SuperButton_red__tj06z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__2n9cJ\",\"spanClassName\":\"SuperCheckbox_spanClassName__ml_kC\",\"checkbox\":\"SuperCheckbox_checkbox__3y_T0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingLine\":\"LoadingLine_loadingLine__18wXU\",\"line\":\"LoadingLine_line__V5rZy\",\"loading\":\"LoadingLine_loading__1uByt\",\"shadow\":\"LoadingLine_shadow__2w4Bm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"SuperRadio_radio__1x8bU\",\"label\":\"SuperRadio_label__3hZEh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__1pDb6\",\"options\":\"SuperSelect_options__dIpYp\"};","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}`// need to fix with (?:) and s.superInput\n\n    return (\n        <div>\n            <input\n                type={type}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n                placeholder={'Type some text'}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n\n            {error && <div className={finalSpanClassName}>{error}</div>}\n        </div>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? `${s.red} ${s.default}` : s.default} ${className}`\n    //${s.button} ${red ? s.red : s.default} ${className}\n\n    return (\n            <button\n                className={finalClassName}\n                {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n            />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label className={s.label}>\n            <input type={'checkbox'}\n                   onChange={onChangeCallback}\n                   className={finalInputClassName}\n\n                   {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n            {/*благодаря label нажатие на спан передастся в инпут*/}\n        </label>\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperRadio.module.css';\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // onChange, onChangeOption\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => (\n        // map options with key\n        <label className={s.label} key={name + '-' + i}>\n            <input\n                className={s.radio}\n                type={'radio'}\n                name={name}\n                checked={o === value}\n                value={o}\n                onChange={onChangeCallback}\n                {...restProps}\n                // name, checked, value, onChange\n            />\n            {o}\n        </label>\n    )) : []\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    )\n}\n\nexport default SuperRadio\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\nimport s from './SuperSelect.module.css'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: any[] = options ? options.map((o, i) => {\n        return (\n            <option key={i} value={o} className={s.options}>{o}</option>\n        );\n    }) : [] // map options with key\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        // onChange, onChangeOption\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    return (\n        <select className={s.select} onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    )\n}\n\nexport default SuperSelect\n","import React, {useState} from \"react\";\nimport SuperInputText from \"../../common/components/SuperInputText/SuperInputText\";\nimport SuperButton from \"../../common/components/SuperButton/SuperButton\";\nimport SuperCheckbox from \"../../common/components/SuperCheckbox/SuperCheckbox\";\nimport SuperRadio from \"../../common/components/SuperRadio/SuperRadio\";\nimport SuperSelect from \"../../common/components/SuperSelect/SuperSelect\";\n\nexport const Test = () => {\n    const arr = ['a', 'b', 'c'];\n    const [value, onChangeOption] = useState(arr[0]);\n\n    return (\n        <div>\n            <SuperInputText/>\n            <SuperButton>\n                Normal\n            </SuperButton>\n            <SuperButton red>\n                Delete\n            </SuperButton>\n            <SuperCheckbox/>\n            <SuperRadio value={value} onChangeOption={onChangeOption} options={arr}/>\n            <SuperSelect options={arr}/>\n        </div>\n    );\n}","export default __webpack_public_path__ + \"static/media/404.9494ad47.png\";","import React from 'react'\nimport s from './Error404.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport error from './404.png';\n\nfunction Error404() {\n    return (\n        <div className={s.wrapper}>\n\n            <div className={s.error}>\n                <span>4</span>\n                <img className={s.image} src={error} alt=\"404\" width={'200px'}/>\n                <span>4</span>\n            </div>\n            <p className={s.text}>\n                The page you are looking <span>NOT FOUND!</span> So sad...\n            </p>\n\n            <NavLink to={'/'} className={s.home}>Return Home</NavLink>\n        </div>\n    )\n}\n\nexport default Error404\n","import axios, {AxiosResponse} from \"axios\";\n\nconst instance = axios.create({\n  baseURL: 'http://localhost:7542/2.0/',\n  // baseURL: 'https://',\n  withCredentials: true,\n})\n\nexport const api = {\n  login(data: LoginRequestType) {\n    return instance.post<LoginRequestType,\n      AxiosResponse<LoginResponseType>>(`auth/login`, data)\n  },\n\n  register(data: RegisterRequestType) {\n    return instance.post<RegisterRequestType,\n      AxiosResponse<RegisterResponseType>>(`auth/register`, data)\n  },\n\n  mePost(data: MePostRequestType) {\n    return instance.post<MePostRequestType,\n      AxiosResponse<MePostResponseType>>(`auth/me`, data)\n  },\n\n  mePut(data: MePutRequestType) {\n    return instance.put<MePutRequestType,\n      AxiosResponse<MePutResponseType>>(`auth/me`, data)\n  },\n\n  meDelete(data: MeDeleteRequestType) {\n    return instance.put<MeDeleteRequestType,\n      AxiosResponse<MeDeleteResponseType>>(`auth/me`, data)\n  },\n\n  forgot(data: ForgotRequestType) {\n    return instance.post<ForgotRequestType,\n      AxiosResponse<ForgotResponseType>>(`auth/forgot`, data)\n  },\n  setNewPassword(data: SetNewPasswordRequestType) {\n    return instance.post<SetNewPasswordRequestType,\n      AxiosResponse<SetNewPasswordResponseType>>(`auth/set-new-password`, data)\n  },\n}\n\nexport type LoginRequestType = {\n  email: string\n  password: string\n  rememberMe: boolean\n}\nexport type LoginResponseType = {\n  _id: string;\n  email: string;\n  name: string;\n  avatar?: string;\n  publicCardPacksCount: number; // количество колод\n  created: Date;\n  updated: Date;\n  isAdmin: boolean;\n  verified: boolean; // подтвердил ли почту\n  rememberMe: boolean;\n  error?: string;\n}\nexport type RegisterRequestType = {\n  email: string\n  password: string\n}\nexport type RegisterResponseType = {\n  addedUser: {}\n  error?: string;\n}\nexport type MePostRequestType = {}\nexport type MePostResponseType = LoginResponseType\nexport type MePutRequestType = {\n  name: string\n  avatar: string\n}\nexport type MePutResponseType = {\n  updateUser: any // весь user {}\n  error?: string\n}\nexport type MeDeleteRequestType = {}\nexport type MeDeleteResponseType = {\n  info: string\n  error: string\n}\nexport type ForgotRequestType = {\n  email: string\n  from: string\n  message: string\n}\nexport type ForgotResponseType = {\n  info: string\n  error: string\n}\nexport type SetNewPasswordRequestType = {\n  password: string\n  resetPasswordToken: string\n}\nexport type SetNewPasswordResponseType = {\n  info: string\n  error: string\n}","import {api} from \"../dal/api/api\";\nimport {Dispatch} from \"redux\";\nimport axios from \"axios\";\n\nconst initialState = {\n  isLoggedIn: false\n}\n\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n  switch (action.type) {\n    case \"login/SET-IS-LOGGED-IN\":\n      return {...state, isLoggedIn: action.value}\n    default:\n      return state;\n  }\n}\n\nexport const setIsLoggedInAC = (value: boolean) =>\n  ({type: 'login/SET-IS-LOGGED-IN', value} as const)\n\nexport const loginTC = (data: any) => async (dispatch: Dispatch<ActionsType>) => {\n  try {\n    await api.login(data)\n    dispatch(setIsLoggedInAC(true))\n  } catch (error) {\n    if(axios.isAxiosError(error)) {\n      console.log(error)\n    }\n  }\n}\n\ntype InitialStateType = { isLoggedIn: boolean }\ntype ActionsType = setIsLoggedInAction\ntype setIsLoggedInAction = ReturnType<typeof setIsLoggedInAC>","const initialState: InitialStateType = {\n  loadingStatus: 'unloading',\n  error: null,\n  // isInitialized: false\n}\n\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n  switch (action.type) {\n    case \"app/SET_LOADING_STATUS\":\n      return {...state, loadingStatus: action.value}\n    case \"app/SET-ERROR\":\n      return {...state, error: action.error}\n    default:\n      return state;\n  }\n}\n\nexport const setLoadingStatusAC = (value: RequestStatusType) => ({type: 'app/SET_LOADING_STATUS', value} as const)\nexport const setAppErrorAC = (error: string | null) => ({type: 'app/SET-ERROR', error} as const)\n\ntype setLoadingStatusAction = ReturnType<typeof setLoadingStatusAC>\ntype setAppErrorAction = ReturnType<typeof setAppErrorAC>\nexport type RequestStatusType = 'loading' | 'unloading'\ntype InitialStateType = {\n  loadingStatus: RequestStatusType\n  error: string | null\n  // isInitialized: boolean\n}\ntype ActionsType = setLoadingStatusAction | setAppErrorAction","import React, {useState} from \"react\";\nimport SuperInputText from \"../../../common/components/SuperInputText/SuperInputText\";\nimport SuperCheckbox from \"../../../common/components/SuperCheckbox/SuperCheckbox\";\nimport SuperButton from \"../../../common/components/SuperButton/SuperButton\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {loginTC} from \"../../../bll/loginReducer\";\nimport {AppStoreType} from \"../../../bll/store\";\nimport {useNavigate} from \"react-router-dom\";\nimport styles from './Login.module.css'\nimport {setLoadingStatusAC} from \"../../../bll/appReducer\";\n\nexport const Login = () => {\n  const [inputEmail, setInputEmail] = useState('');\n  const [inputPassword, setInputPassword] = useState('');\n  const [rememberMe, setRememberMe] = useState(false);\n\n  const dispatch = useDispatch()\n\n  const onSubmit = (data: any) => {\n    dispatch(loginTC({email: inputEmail, password: inputPassword, rememberMe: rememberMe}))\n    console.log(data)\n    setInputEmail('')\n    setInputPassword('')\n  }\n\n  const isLoggedIn = useSelector((state: AppStoreType) => state.loginPage.isLoggedIn)\n  const navigate = useNavigate()\n  console.log(isLoggedIn)\n\n  // if(isLoggedIn) navigate('/')\n\n  return (\n    <div>\n      <form>\n        <SuperInputText name={'email'} type={'text'} value={inputEmail} onChangeText={setInputEmail}\n                        placeholder={'Email'}/>\n        <SuperInputText name={'password'} type={'password'} value={inputPassword} onChangeText={setInputPassword}\n                        placeholder={'Password'}/>\n        <SuperCheckbox name={'rememberMe'} checked={rememberMe} onChangeChecked={setRememberMe}/>\n        <SuperButton onClick={onSubmit}>Sign in</SuperButton>\n      </form>\n\n      <div>\n        <button onClick={() => dispatch(setLoadingStatusAC('loading'))}>Loading</button>\n        <button onClick={() => dispatch(setLoadingStatusAC('unloading'))}>Unloading</button>\n      </div>\n\n\n      <section className={styles.loginSection}>\n        <article className={styles.loginArticle}>\n          <h3>Login to Web App</h3>\n          <form className={styles.loginForm}>\n            <div>\n              <input className={styles.username} type=\"text\" name=\"email\" placeholder=\"Email\"/>\n            </div>\n            <div>\n              <input className={styles.password} type=\"password\" name=\"password\" placeholder=\"Password\"/>\n            </div>\n            <div className={styles.checkboxRemember}>\n              <input className={styles.checkbox} type=\"checkbox\" name=\"rememberMe\"/>\n              <label className={styles.remember} htmlFor=\"rememberMe\">Remember me on this computer</label>\n            </div>\n            <div>\n              <button className={styles.submit}>Login</button>\n            </div>\n          </form>\n        </article>\n        <div className={styles.reset}>\n          Forgot your password? <a href=\"#\">Click here</a> to reset it.\n        </div>\n      </section>\n    </div>\n  );\n}\n","import {Dispatch} from \"redux\";\nimport {api} from \"../dal/api/api\";\nimport axios from \"axios\";\n\nconst initialState = {\n  errorRegister: null\n}\nexport const registerReducer = (state: InitialStateType = initialState, action: ActionsType) => {\n  switch (action.type) {\n    case \"register/SET_ERROR\":\n      return {...state, errorRegister: action.errorRegister}\n    default:\n      return state;\n  }\n}\n\nconst registerAC = (data: any) =>\n  ({type: 'register/REGISTER', data} as const)\nconst setErrorAC = (errorRegister: any) =>\n  ({type: 'register/SET_ERROR', errorRegister} as const)\n\nexport const registerTC = (data: RegisterDataType) => async (dispatch: Dispatch<ActionsType>) => {\n  try {\n    await api.register(data)\n    dispatch(registerAC(data))\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      console.log({...error})\n      console.log('errrror', error.response?.data.passwordRegExp)\n      dispatch(setErrorAC(error.response?.data.passwordRegExp))\n    }\n  }\n}\n\ntype RegisterAction = ReturnType<typeof registerAC>\ntype SetErrorAction = ReturnType<typeof setErrorAC>\ntype ActionsType = RegisterAction | SetErrorAction\nexport type RegisterDataType = {\n  email: string\n  password: string\n}\ntype InitialStateType = { errorRegister: string | null }\n","import React, {useState} from \"react\";\nimport SuperInputText from \"../../../common/components/SuperInputText/SuperInputText\";\nimport SuperButton from \"../../../common/components/SuperButton/SuperButton\";\nimport {NavLink} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {registerTC} from \"../../../bll/registerReducer\";\nimport styles from \"./Register.module.css\";\nimport {AppStoreType} from \"../../../bll/store\";\n\nexport const Registration = () => {\n  const [inputEmail, setInputEmail] = useState('');\n  const [inputPassword, setInputPassword] = useState('');\n  const [inputPasswordControl, setInputPasswordControl] = useState('');\n  const errorRegister = useSelector<AppStoreType, string | null>((state) => state.registerPage.errorRegister)\n  const dispatch = useDispatch()\n\n  const onSubmit = () => {\n    // if (inputPassword && inputPassword === inputPasswordControl) {\n    //   const data = {email: inputEmail, password: inputPassword,}\n    //   dispatch(registerTC(data))\n    //   alert(inputEmail)\n    //   console.log(data)\n    // } else {\n    //   //some error\n    // }\n      const data = {email: inputEmail, password: inputPassword,}\n    dispatch(registerTC(data))\n    alert(inputEmail)\n    console.log(data)\n\n  }\n\n  return (\n    <div className={styles.registration}>\n      <section className={styles.registerSection}>\n        <article className={styles.registerArticle}>\n          <h3>Registration</h3>\n          <div className={styles.registerForm}>\n            <div>\n              <SuperInputText\n                className={styles.email}\n                name={'email'}\n                type={'text'}\n                value={inputEmail}\n                onChangeText={setInputEmail}\n                placeholder={'Email'}\n              />\n            </div>\n            <div>\n              <SuperInputText\n                className={styles.password}\n                name={'password'}\n                type={'password'}\n                value={inputPassword}\n                onChangeText={setInputPassword}\n                placeholder={'Password'}\n              />\n            </div>\n            <div>\n              <SuperInputText\n                className={styles.password}\n                name={'passwordControl'}\n                type={'password'}\n                value={inputPasswordControl}\n                onChangeText={setInputPasswordControl}\n                placeholder={'Password'}\n              />\n            </div>\n            <div>\n              <SuperButton className={styles.submit} onClick={onSubmit}>Sign in</SuperButton>\n            </div>\n          </div>\n        </article>\n        {errorRegister && <div className={'error'}>Error: {errorRegister}</div>}\n\n      </section>\n    </div>\n  );\n}","import React from \"react\";\n\nexport const NewPass = () => {\n    return (\n        <div>\n            NewPass\n        </div>\n    );\n}","import React from \"react\";\n\nexport const PassRecover = () => {\n    return (\n        <div>\n            PassRecover\n        </div>\n    );\n}","import React from \"react\";\n\nexport const Profile = () => {\n    return (\n        <div>\n            Profile\n        </div>\n    );\n}","import styles from './LoadingLine.module.css'\n\nexport const LoadingLine = () => {\n  return (\n    <div className={styles.loadingLine}>\n      {/*<h3>Loading is in progress, do not rush, be patient</h3>*/}\n      <div className={styles.line}>\n        <div className={styles.shadow}/>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect} from 'react';\nimport {Navigate, NavLink, Route, Routes} from 'react-router-dom';\nimport './App.css';\nimport {Test} from \"../pages/Test\";\nimport Error404 from \"../pages/404/Error404\";\nimport {Login} from \"../pages/Login/Login\";\nimport {Registration} from \"../pages/Register/Registration\";\nimport {NewPass} from \"../pages/NewPass/NewPass\";\nimport {PassRecover} from \"../pages/PassRecover/PassRecover\";\nimport {Profile} from \"../pages/Profile/Profile\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../bll/store\";\nimport {LoadingLine} from \"../../common/components/loadingLine/LoadingLine\";\nimport {RequestStatusType} from \"../../bll/appReducer\";\nimport {setIsLoggedInAC} from \"../../bll/loginReducer\";\n\nfunction App() {\n    const loadingStatus = useSelector<AppStoreType, RequestStatusType>((state) => state.app.loadingStatus)\n    const error = useSelector<AppStoreType, string | null>((state) => state.app.error)\n    const isLoggedIn = useSelector<AppStoreType, boolean>((state) => state.loginPage.isLoggedIn)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        // dispatch(setIsLoggedInAC())\n    }, [dispatch])\n\n    return (\n        <div className=\"App\">\n            <div>\n                <button><NavLink to={'/'}>home/test</NavLink></button>\n                <button><NavLink to={'login'}>login</NavLink></button>\n                <button><NavLink to={'404'}>404</NavLink></button>\n                <button><NavLink to={'profile'}>profile</NavLink></button>\n                <button><NavLink to={'registration'}>registration</NavLink></button>\n                <button><NavLink to={'new_password'}>new_password</NavLink></button>\n                <button><NavLink to={'pass_recovery'}>pass_recovery</NavLink></button>\n            </div>\n            {loadingStatus === 'loading' && <LoadingLine/>}\n            <Routes>\n                <Route path={'/'} element={<Test/>}/>\n                <Route path={'login'} element={<Login/>}/>\n                <Route path={'profile'} element={<Profile/>}/>\n                <Route path={'registration'} element={<Registration/>}/>\n                <Route path={'new_password'} element={<NewPass/>}/>\n                <Route path={'pass_recovery'} element={<PassRecover/>}/>\n                <Route path={'404'} element={<Error404/>}/>\n                <Route path={'*'} element={<Navigate to={'404'}/>}/>\n            </Routes>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {}\nexport const newPassReducer = (state = initialState, action: NewPassActionsType) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n}\n\nexport type NewPassActionsType = { type: string }","const initialState = {}\nexport const passRecoverReducer = (state = initialState, action: PassRecoverActionsType) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n}\n\nexport type PassRecoverActionsType = { type: string }","const initialState = {}\nexport const profileReducer = (state = initialState, action: ProfileActionsType) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n}\n\nexport type ProfileActionsType = { type: string }","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport {loginReducer} from \"./loginReducer\";\nimport {newPassReducer} from \"./newPassReducer\";\nimport {passRecoverReducer} from \"./passRecoverReducer\";\nimport {profileReducer} from \"./profileReducer\";\nimport {registerReducer} from \"./registerReducer\";\nimport {appReducer} from \"./appReducer\";\nimport thunkMiddleware from 'redux-thunk'\n\n\nconst rootReducer = combineReducers({\n    app: appReducer,\n    loginPage: loginReducer,\n    newPassPage: newPassReducer,\n    recoverPassPage: passRecoverReducer,\n    profilePage: profileReducer,\n    registerPage: registerReducer,\n})\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\nexport type AppStoreType = ReturnType<typeof rootReducer>;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './ui/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./bll/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store}>\n        <App/>\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}