{"version":3,"sources":["common/styles/commonStyles.module.css","ui/pages/Packs/Packs.module.css","ui/pages/LearnCards/LearnCards.module.css","ui/pages/Login/Login.module.css","common/components/Paginator/Paginator.module.css","ui/pages/404/Error404.module.css","ui/pages/Profile/Profile.module.css","common/components/SuperInputText/SuperInputText.module.css","common/components/Sort/Sort.module.css","common/components/Modals/ItemModal/ItemModal.module.css","common/components/SuperButton/SuperButton.module.css","common/components/SuperCheckbox/SuperCheckbox.module.css","ui/pages/PassRecover/PassRecover.module.css","common/components/LoadingLine/LoadingLine.module.css","common/components/Modals/Modal/Modal.module.css","ui/pages/Cards/Cards.module.css","common/components/Modals/UpModal/UpModal.module.css","ui/pages/Register/Register.module.css","ui/pages/NewPass/NewPass.module.css","ui/pages/CheckEmail/CheckMail.module.css","common/components/Search/Search.module.css","ui/pages/Packs/Pack/Pack.module.css","common/components/Modals/QuestionModal/QuestionModal.module.css","common/components/Modals/ErrorModal/ErrorModal.module.css","ui/pages/404/404.png","ui/pages/404/Error404.tsx","common/components/SuperButton/SuperButton.tsx","common/components/SuperInputText/SuperInputText.tsx","common/components/SuperCheckbox/SuperCheckbox.tsx","dal/api/api.ts","common/mail/Mail.ts","bll/profileReducer.ts","bll/appReducer.ts","bll/loginReducer.ts","ui/pages/Login/Login.tsx","bll/registerReducer.ts","ui/pages/Register/Registration.tsx","bll/newPassReducer.ts","ui/pages/NewPass/NewPass.tsx","bll/passRecoverReducer.ts","ui/pages/PassRecover/PassRecover.tsx","common/images/noAvatar.png","ui/pages/Profile/Profile.tsx","common/components/LoadingLine/LoadingLine.tsx","common/images/checkMail.png","ui/pages/CheckEmail/CheckEmail.tsx","bll/packReducer.ts","common/components/Paginator/Paginator.tsx","common/components/Search/Search.tsx","common/components/Sort/Sort.tsx","common/components/Modals/Modal/Modal.tsx","common/components/Modals/ItemModal/ItemModal.tsx","ui/pages/Packs/Pack/Pack.tsx","common/components/Modals/QuestionModal/QuestionModal.tsx","common/components/Modals/ErrorModal/ErrorModal.tsx","ui/pages/Packs/Packs.tsx","bll/cardReducer.ts","ui/pages/Cards/Card/Card.tsx","ui/pages/Cards/Cards.tsx","common/components/Modals/UpModal/UpModal.tsx","ui/pages/LearnCards/LearnCards.tsx","ui/App/App.tsx","reportWebVitals.ts","bll/store.ts","index.tsx"],"names":["module","exports","Error404","className","commonStyles","wrapper","section","s","error","image","src","alt","width","text","to","home","SuperButton","red","restProps","finalClassName","default","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","spanClassName","finalSpanClassName","finalInputClassName","input","errorInput","superInput","e","currentTarget","value","key","placeholder","SuperCheckbox","onChangeChecked","labelClassName","children","checkbox","finalLabelClassName","label","checked","instance","axios","create","baseURL","withCredentials","api","data","post","put","delete","passRecoverMail","email","from","message","newPassword","token","password","resetPasswordToken","get","params","name","cardsPack","packId","id","_id","initialState","avatar","publicCardPacksCount","isAdmin","verified","rememberMe","created","updated","setProfileData","updateProfileData","setProfileError","updateProfile","dispatch","a","setAppLoading","response","updatedUser","isAxiosError","loading","initialized","isLoggedIn","setLoginError","setLoggedIn","Login","useDispatch","useSelector","state","loginPage","useState","setEmail","setPassword","setRememberMe","emailError","setEmailError","passwordError","setPasswordError","submitHandler","test","length","article","form","styles","errorEmail","errorPassword","checkboxRemember","remember","onClick","button","reset","errorRegister","isRegistered","setRegisterError","Registration","registerPage","passwordCheck","setPasswordCheck","onSubmit","statusText","isEmailValid","isPassValid","passwordRegExp","btnWrapper","setNewPassword","errorResponse","NewPass","status","app","setNewPassState","newPassPage","useParams","confirmPassword","setConfirmPassword","info","createNewPassword","event","disabled","mailSent","PassRecover","recoverPassState","recoverPassPage","recoverPassMail","setRecoverPassMail","Profile","profileName","profilePage","profileAvatar","profileEmail","setName","setAvatar","editName","setEditName","onSubmitName","trim","onSubmitAvatar","noAvatar","onBlur","onFocus","select","autoFocus","onDoubleClick","LoadingLine","loadingLine","line","shadow","CheckEmail","checkMail","cardPacks","cardPacksTotalCount","maxCardsCount","minCardsCount","page","pageCount","user_id","setPacksData","setPacksError","setPacksSortData","sort","sortType","getPacks","searchParams","getState","packPage","packName","Paginator","totalCount","pageSize","currentPage","onChangedPage","isLoading","pageCounts","Math","ceil","pages","startPage","pageLimit","endPage","i","push","pageList","map","n","pagesWrapper","Search","searchFunction","search","setSearch","searchSubmit","searchWrapper","Sort","sortHandlerUp","sortHandlerDown","title","updatedBtnWrapper","updatedBtn","Modal","setShow","left","top","modalBack","modal","style","ItemModal","callback","cardId","card","cardPage","cards","find","c","answer","inputOneValue","setInputOneValue","question","inputTwoValue","setInputTwoValue","setError","onClickApplyPack","onClickApplyCard","errorCards","modalBtnWrapper","Pack","cardsCount","authorId","deletePack","updatePackHandler","userId","packUpdateDate","Date","buttonStyle","learnButtonStyle","toLocaleString","buttonWrapper","QuestionModal","ErrorModal","opacity","setOpacity","setTimeout","Packs","useEffect","showAddModal","setShowAddModal","showUpdateModal","setShowUpdateModal","showQuestionModal","setShowQuestionModal","setPackId","onClickUpdatePack","onClickDeletePack","packsList","p","addPack","updatePack","packNumberWrapper","labelSelectPageCounts","Number","refreshBtn","table","cellPadding","myPacksButtonsWrapper","backBtn","cardsTotalCount","maxGrade","minGrade","packUserId","setCardsData","setCardsError","getCards","Card","grade","deleteCardHandler","updateCardHandler","Cards","cardsPack_id","pack_id","setCardId","cardList","cardQuestion","UpModal","speed","show","handleScroll","window","scrollY","addEventListener","upBlock","step","lastState","innerTimer","setInterval","clearInterval","scroll","selectCard","sum","reduce","acc","rand","random","res","newSum","LearnCards","gradeButtons","setChecked","firstRender","setFirstRender","shots","rating","setCard","sendGrade","card_id","gradeList","indexOf","answerBlockWrapper","answerText","answerBtn","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","b","A","toLowerCase","B","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0a655d9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"commonStyles_wrapper__3ZWyx\",\"section\":\"commonStyles_section__3qJ5j\",\"article\":\"commonStyles_article__3mEMT\",\"form\":\"commonStyles_form__Axs3w\",\"input\":\"commonStyles_input__1CBtn\",\"button\":\"commonStyles_button__1L9l9\",\"error\":\"commonStyles_error__2lFaq\",\"disabled\":\"commonStyles_disabled__24hNF\",\"table\":\"commonStyles_table__a5d14\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Packs_section__1Ykri\",\"article\":\"Packs_article__2xcNA\",\"table\":\"Packs_table__oL9en\",\"myPacksButtonsWrapper\":\"Packs_myPacksButtonsWrapper__3v61n\",\"backBtn\":\"Packs_backBtn__1dwUf\",\"error\":\"Packs_error__2dwMS\",\"labelSelectPageCounts\":\"Packs_labelSelectPageCounts__1CBE0\",\"packNumberWrapper\":\"Packs_packNumberWrapper__1UgmW\",\"select\":\"Packs_select__2Py_G\",\"refreshBtn\":\"Packs_refreshBtn__3eX29\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"LearnCards_wrapper__1UBrK\",\"btnWrapper\":\"LearnCards_btnWrapper__2ViMQ\",\"question\":\"LearnCards_question__1TJxY\",\"answerBlockWrapper\":\"LearnCards_answerBlockWrapper__2x02G\",\"answer\":\"LearnCards_answer__FVAfg\",\"answerText\":\"LearnCards_answerText__lVD61\",\"answerBtn\":\"LearnCards_answerBtn__1eqGw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"remember\":\"Login_remember__b-MMo\",\"checkbox\":\"Login_checkbox__3uCiw\",\"checkboxRemember\":\"Login_checkboxRemember__Z5-9S\",\"button\":\"Login_button__1D3Lk\",\"reset\":\"Login_reset__3qKuQ\",\"errorEmail\":\"Login_errorEmail__2Reup\",\"errorPassword\":\"Login_errorPassword__PQ1RT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagesWrapper\":\"Paginator_pagesWrapper__E0d1A\",\"pageList\":\"Paginator_pageList__1BzHp\",\"currentPage\":\"Paginator_currentPage__1sjq8\",\"page\":\"Paginator_page__3nDta\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Error404_section__16GgK\",\"error\":\"Error404_error__2qreX\",\"home\":\"Error404_home__2IoEE\",\"text\":\"Error404_text__2Xe4f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Profile_error__BPh_U\",\"avatar\":\"Profile_avatar__okiib\",\"info\":\"Profile_info__BE9gG\",\"btnWrapper\":\"Profile_btnWrapper__1jCN7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__1N21f\",\"errorInput\":\"SuperInputText_errorInput__2Aa0j\",\"error\":\"SuperInputText_error__3crER\",\"superInput\":\"SuperInputText_superInput__20qqK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"updated\":\"Sort_updated__1GSZY\",\"updatedBtnWrapper\":\"Sort_updatedBtnWrapper__3bWZl\",\"updatedBtn\":\"Sort_updatedBtn__3zske\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBtnWrapper\":\"ItemModal_modalBtnWrapper__1BN-X\",\"error\":\"ItemModal_error__7wdz3\",\"errorCards\":\"ItemModal_errorCards__315ph\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2rk-j\",\"red\":\"SuperButton_red__2T61F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__2qv2l\",\"spanClassName\":\"SuperCheckbox_spanClassName__XqaW5\",\"checkbox\":\"SuperCheckbox_checkbox__2_Goo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"PassRecover_button__n2Xpf\",\"disabled\":\"PassRecover_disabled__3c3pV\",\"error\":\"PassRecover_error__3V4V4\",\"btnWrapper\":\"PassRecover_btnWrapper__200hx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingLine\":\"LoadingLine_loadingLine__Jh-1D\",\"line\":\"LoadingLine_line__G1XBD\",\"loading\":\"LoadingLine_loading__GJ-Mb\",\"shadow\":\"LoadingLine_shadow__2TZ_w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBack\":\"Modal_modalBack__3T8Nn\",\"modal\":\"Modal_modal__138-X\",\"title\":\"Modal_title__19Arz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Cards_section__2mV4x\",\"article\":\"Cards_article__3PGtl\",\"error\":\"Cards_error__1fvYV\",\"backBtn\":\"Cards_backBtn__1_KXG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"upBlock\":\"UpModal_upBlock__1I7QB\",\"text\":\"UpModal_text__BEbsS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Register_error__xyJ6M\",\"btnWrapper\":\"Register_btnWrapper__3Bog7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"NewPass_button__3vBlI\",\"error\":\"NewPass_error__1U76E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"CheckMail_message__vNccq\",\"image\":\"CheckMail_image__1ZFji\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchWrapper\":\"Search_searchWrapper__8WU_c\",\"search\":\"Search_search__1BCTh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonWrapper\":\"Pack_buttonWrapper__3MODa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBtnWrapper\":\"QuestionModal_modalBtnWrapper__1cItb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"ErrorModal_error__3CWsI\"};","export default __webpack_public_path__ + \"static/media/404.9494ad47.png\";","import React from 'react'\r\nimport commonStyles from \"../../../common/styles/commonStyles.module.css\";\r\nimport s from './Error404.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport error from './404.png';\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={commonStyles.wrapper}>\r\n          <div className={`${commonStyles.section} ${s.section}`}>\r\n            <div className={s.error}>\r\n              <span>4</span>\r\n              <img className={s.image} src={error} alt=\"404\" width={'200px'}/>\r\n              <span>4</span>\r\n            </div>\r\n            <p className={s.text}>\r\n              The page you are looking <span>NOT FOUND!</span> So sad...\r\n            </p>\r\n            <NavLink to={'/'} className={s.home}>Return Home</NavLink>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = className ? className : `${red ? `${s.red} ${s.default}` : s.default} ${className}`\r\n    //${s.button} ${red ? s.red : s.default} ${className}\r\n\r\n    return (\r\n            <button\r\n                className={finalClassName}\r\n                {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n            />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = spanClassName ? spanClassName : `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    // const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}`\r\n    const finalInputClassName = className ? className : `${s.input} ${error ? s.errorInput : s.superInput} ${className}`\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                placeholder={'Type some text'}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n\r\n            {error && <div className={finalSpanClassName}>{error}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n    labelClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName, labelClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${className ? className : s.checkbox}`\r\n    const finalSpanClassName = `${spanClassName ? spanClassName : s.spanClassName}`\r\n    const finalLabelClassName = `${labelClassName ? labelClassName : s.label}`\r\n\r\n    return (\r\n        <label className={finalLabelClassName}>\r\n            <input type={'checkbox'}\r\n                   onChange={onChangeCallback}\r\n                   className={finalInputClassName}\r\n\r\n                   {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={finalSpanClassName}>{children}</span>}\r\n            {/*благодаря label нажатие на спан передастся в инпут*/}\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import axios, {AxiosResponse} from \"axios\";\r\nimport {Mail} from \"../../common/mail/Mail\";\r\nimport {PackType} from \"../../bll/packReducer\";\r\n\r\nconst instance = axios.create({\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true,\r\n})\r\n\r\nexport const api = {\r\n    login(data: LoginRequestType) {\r\n        return instance.post<LoginRequestType, AxiosResponse<UserResponseType, LoginRequestType>, LoginRequestType>\r\n        (`auth/login`, data)\r\n    },\r\n    register(data: RegisterRequestType) {\r\n        return instance.post<RegisterRequestType, AxiosResponse<RegisterResponseType, RegisterRequestType>, RegisterRequestType>\r\n        (`auth/register`, data)\r\n    },\r\n    mePost() {\r\n        return instance.post<{}, AxiosResponse<UserResponseType, {}>>(`auth/me`)\r\n    },\r\n    mePut(data: MePutRequestType) {\r\n        return instance.put<MePutRequestType, AxiosResponse<MePutResponseType, MePutRequestType>, MePutRequestType>(`auth/me`, data)\r\n    },\r\n    meDelete() {\r\n        return instance.delete<{}, AxiosResponse<InfoResponseType, {}>>(`auth/me`)\r\n    },\r\n    forgotPassword(passRecoverMail: string) {\r\n        return instance.post<ForgotRequestType, AxiosResponse<InfoResponseType, ForgotRequestType>, ForgotRequestType>\r\n        (`auth/forgot`, {\r\n            email: passRecoverMail,\r\n            from: \"Cards <best@yandex.by>\",\r\n            message: Mail(),\r\n        })\r\n    },\r\n    setNewPassword(newPassword: string, token: string) {\r\n        return instance.post<SetNewPasswordRequestType, AxiosResponse<InfoResponseType, SetNewPasswordRequestType>, SetNewPasswordRequestType>\r\n        (`auth/set-new-password`, {password: newPassword, resetPasswordToken: token})\r\n    },\r\n\r\n    //Packs\r\n    getPacks(data?: GetPacksRequestType) {\r\n        return instance.get<GetPacksRequestType, AxiosResponse<GetPacksResponseType, GetPacksRequestType>, GetPacksRequestType>\r\n        (`cards/pack`, {params: data})\r\n    },\r\n    addPack(name: string) {\r\n        return instance.post<{}, AxiosResponse<{}, AddPackRequestType>, AddPackRequestType>\r\n        (`cards/pack`, {cardsPack: {name}})\r\n    },\r\n    deletePack(packId: string) {\r\n        return instance.delete<{ packId: string }>(`cards/pack`, {params: {id: packId}})\r\n    },\r\n    updatePack(packId: string, name: string) {\r\n        return instance.put<UpdatePackType>(`cards/pack`, {cardsPack: {_id: packId, name}})\r\n    },\r\n\r\n    //Cards\r\n    getCards(data: GetCardsRequestType) {\r\n        return instance.get<GetCardsRequestType, AxiosResponse<GetCardsResponseType, GetCardsRequestType>, GetCardsRequestType>\r\n        (`cards/card`, {params: data});\r\n    },\r\n    addCard(data: AddCardRequestType) {\r\n        return instance.post<{ cardsPack_id: string }, AxiosResponse<{ cardsPack_id: string }, AddCardRequestType>, AddCardRequestType>\r\n        (`cards/card`, {...data});\r\n    },\r\n    deleteCard(data: { id: string }) {\r\n        return instance.delete<{ id: string }>(`cards/card`, {params: data})\r\n    },\r\n    updateCard(data: UpdateCardRequestType) {\r\n        return instance.put<UpdateCardRequestType>(`cards/card`, {...data})\r\n    },\r\n    gradeCard(data: GradeCardRequestType) {\r\n        return instance.put<GradeCardRequestType>(`/cards/grade`, {...data});\r\n    }\r\n}\r\n\r\nexport type LoginRequestType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\nexport type MeUpdateResponseType = {\r\n    updatedUser: UserResponseType,\r\n    error?: string\r\n}\r\nexport type UserResponseType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar: string;\r\n    publicCardPacksCount: number;\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean;\r\n    rememberMe: boolean;\r\n    error: string;\r\n}\r\nexport type RegisterRequestType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type RegisterResponseType = {\r\n    addedUser: UserResponseType\r\n    error?: string;\r\n}\r\nexport type MePutRequestType = {\r\n    name?: string\r\n    avatar?: string\r\n}\r\nexport type MePutResponseType = {\r\n    updatedUser: UserResponseType\r\n    error?: string\r\n}\r\nexport type ForgotRequestType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n}\r\nexport type SetNewPasswordRequestType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\nexport type InfoResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\n\r\n//Packs\r\nexport type GetPacksRequestType = {\r\n    packName?: string\r\n    min?: number\r\n    max?: number\r\n    sortPacks?: '0updated' | '1updated'\r\n    page?: number\r\n    pageCount?: number\r\n    user_id?: string\r\n}\r\nexport type GetPacksResponseType = {\r\n    cardPacks: PackType[]\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\nexport type AddPackRequestType = {\r\n    cardsPack: {\r\n        name: string\r\n        grade?: number\r\n        shots?: number\r\n        rating?: number\r\n        deckCover?: string\r\n        private?: boolean\r\n        type?: string\r\n    }\r\n}\r\nexport type UpdatePackType = {\r\n    cardsPack: {\r\n        id: string\r\n        name: string\r\n    }\r\n}\r\n\r\n//Cards\r\nexport type GetCardsRequestType = {\r\n    cardsPack_id: string\r\n    cardAnswer?: string\r\n    cardQuestion?: string\r\n    min?: number\r\n    max?: number\r\n    sortCards?: '0grade' | '1grade'\r\n    page?: number\r\n    pageCount?: number\r\n}\r\nexport type GetCardsResponseType = {\r\n    cards: CardType[]\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    packUserId: string\r\n}\r\nexport type CardType = {\r\n    cardsPack_id: string\r\n    answer: string\r\n    question: string\r\n    grade: number\r\n    shots: number\r\n    rating: number\r\n    type: string\r\n    user_id: string\r\n    created: Date | null\r\n    updated: Date | null\r\n    _id: string\r\n}\r\nexport type AddCardRequestType = {\r\n    card: {\r\n        cardsPack_id: string\r\n        answer: string\r\n        question: string\r\n        grade?: number\r\n        shots?: number\r\n        rating?: number\r\n        answerImg?: string\r\n        questionImg?: string\r\n        questionVideo?: string\r\n        answerVideo?: string\r\n        type?: string\r\n    }\r\n}\r\nexport type UpdateCardRequestType = {\r\n    card: {\r\n        _id: string\r\n        question?: string\r\n        answer?: string\r\n        comments?: string\r\n    }\r\n}\r\nexport type GradeCardRequestType = {\r\n    grade: number,\r\n    card_id: string,\r\n}","export const Mail = () => {\r\n    const styles = 'color: green'\r\n    //http://localhost:3000/#/set-new-password/$token$\r\n    \r\n    return `<div style=\"${styles}\">Password recovery link: <a href=\"https://grindezer.github.io/card-project/#/set-new-password/$token$\">\r\n                                                    Click on this link to create a new password\r\n                                                    </a></div>`\r\n}","import {api, UserResponseType, MePutRequestType} from \"../dal/api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport axios from \"axios\";\r\nimport {setAppLoading} from \"./appReducer\";\r\n\r\nconst initialState: ProfileInitialStateType = {\r\n    _id: '',\r\n    email: '',\r\n    name: '',\r\n    avatar: '',\r\n    publicCardPacksCount: 0,\r\n    isAdmin: false,\r\n    verified: false,\r\n    rememberMe: false,\r\n    error: '',\r\n    token: '',\r\n    created: null,\r\n    updated: null,\r\n}\r\nexport const profileReducer = (state = initialState, action: ProfileActionsType): ProfileInitialStateType => {\r\n    switch (action.type) {\r\n        case \"PROFILE/SET-PROFILE-DATA\":\r\n            return {...state, ...action.data}\r\n        case \"PROFILE/UPDATE-PROFILE-DATA\":\r\n            return {...state, name: action.data.name, avatar: action.data.avatar}\r\n        case \"PROFILE/SET-PROFILE-ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"PROFILE/SET-PROFILE-DELETE-DATA\":\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setProfileData = (data: ProfileInitialStateType) => {\r\n    return {type: 'PROFILE/SET-PROFILE-DATA', data} as const\r\n}\r\nexport const updateProfileData = (data: UserResponseType) => {\r\n    return {type: 'PROFILE/UPDATE-PROFILE-DATA', data} as const\r\n}\r\nexport const setProfileError = (error: string) => {\r\n    return {type: 'PROFILE/SET-PROFILE-ERROR', error} as const\r\n}\r\nexport const setProfileDeleteData = () => {\r\n    return {type: 'PROFILE/SET-PROFILE-DELETE-DATA'} as const\r\n}\r\n\r\n\r\nexport const updateProfile = (data: MePutRequestType) => async (dispatch: Dispatch) => {\r\n    dispatch(setAppLoading(true));\r\n    try {\r\n        const response = await api.mePut(data);\r\n        dispatch(updateProfileData(response.data.updatedUser));\r\n    } catch (error) {\r\n        if (axios.isAxiosError(error) && error.response) {\r\n            dispatch(setProfileError(error.response.data.error));\r\n        }\r\n    } finally {\r\n        dispatch(setAppLoading(false));\r\n    }\r\n}\r\n\r\n\r\nexport type ProfileActionsType =\r\n    ReturnType<typeof setProfileData>\r\n    | ReturnType<typeof updateProfileData>\r\n    | ReturnType<typeof setProfileError>\r\n    | ReturnType<typeof setProfileDeleteData>\r\n\r\n\r\nexport type ProfileInitialStateType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar: string\r\n    publicCardPacksCount: number\r\n    token?: string\r\n    created: Date | null\r\n    updated: Date | null\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error: string\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {api} from \"../dal/api/api\";\r\nimport {setProfileData} from \"./profileReducer\";\r\nimport {setLoggedIn} from \"./loginReducer\";\r\n\r\nconst initialState: InitialStateType = {\r\n    loading: false,\r\n    initialized: false,\r\n    error: null,\r\n}\r\n\r\nexport const appReducer = (state = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"APP/SET_LOADING_STATUS\":\r\n            return {...state, loading: action.value}\r\n        case \"APP/SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"APP/SET-INITIALIZE\":\r\n            return {...state, initialized: true}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAppLoading = (value: boolean) => ({type: 'APP/SET_LOADING_STATUS', value} as const)\r\nexport const setAppError = (error: string | null) => ({type: 'APP/SET-ERROR', error} as const)\r\nexport const setAppInitialize = () => ({type: 'APP/SET-INITIALIZE'} as const)\r\n\r\nexport const initialize = () => async (dispatch: Dispatch) => {\r\n    dispatch(setAppLoading(true));\r\n    try {\r\n        const response = await api.mePost()\r\n        dispatch(setProfileData(response.data));\r\n        dispatch(setLoggedIn(true));\r\n    } catch {\r\n        dispatch(setLoggedIn(false));\r\n    } finally {\r\n        dispatch(setAppInitialize());\r\n        dispatch(setAppLoading(false));\r\n    }\r\n}\r\n\r\ntype AppActionsType = ReturnType<typeof setAppLoading>\r\n    | ReturnType<typeof setAppError>\r\n    | ReturnType<typeof setAppInitialize>\r\n\r\ntype InitialStateType = {\r\n    loading: boolean,\r\n    initialized: boolean,\r\n    error: null | string,\r\n}","import {api, LoginRequestType} from \"../dal/api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport axios from \"axios\";\r\nimport {setAppLoading} from \"./appReducer\";\r\nimport {setProfileData, setProfileDeleteData, setProfileError} from \"./profileReducer\";\r\n\r\nconst initialState: InitialStateType = {\r\n    isLoggedIn: false,\r\n    rememberMe: false,\r\n    error: '',\r\n}\r\n\r\nexport const loginReducer = (state = initialState, action: LoginActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"LOGIN/SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"LOGIN/SET-LOGGED-IN\":\r\n            return {...state, isLoggedIn: action.value}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setLoginError = (error: string) => ({type: 'LOGIN/SET-ERROR', error} as const)\r\nexport const setLoggedIn = (value: boolean) => ({type: 'LOGIN/SET-LOGGED-IN', value} as const)\r\n\r\nexport const logIn = (data: LoginRequestType) => async (dispatch: Dispatch) => {\r\n    dispatch(setAppLoading(true));\r\n    try {\r\n        const response = await api.login(data);\r\n        dispatch(setLoggedIn(true));\r\n        dispatch(setProfileData(response.data)); // Инфа для профиля\r\n    } catch (error) {\r\n        if (axios.isAxiosError(error) && error.response) {\r\n            dispatch(setLoginError(error.response.data.error));\r\n        } else {\r\n            dispatch(setLoginError('Unknown error. Try again later'))\r\n        }\r\n    } finally {\r\n        dispatch(setAppLoading(false));\r\n    }\r\n}\r\n\r\nexport const logOut = () => async (dispatch: Dispatch) => {\r\n    dispatch(setAppLoading(true));\r\n    try {\r\n        await api.meDelete();\r\n        dispatch(setProfileDeleteData());\r\n        dispatch(setLoggedIn(false));\r\n    } catch (error) {\r\n        if (axios.isAxiosError(error) && error.response) {\r\n            dispatch(setProfileError(error.response.data.error));\r\n        }\r\n    } finally {\r\n        dispatch(setAppLoading(false));\r\n    }\r\n}\r\n\r\ntype LoginActionsType = ReturnType<typeof setLoginError> | ReturnType<typeof setLoggedIn>\r\n\r\ntype InitialStateType = {\r\n    isLoggedIn: boolean\r\n    rememberMe: boolean\r\n    error: string\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport SuperButton from \"../../../common/components/SuperButton/SuperButton\";\r\nimport SuperInputText from \"../../../common/components/SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../../../common/components/SuperCheckbox/SuperCheckbox\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {logIn, setLoginError} from \"../../../bll/loginReducer\";\r\nimport {Link, Navigate} from \"react-router-dom\";\r\nimport commonStyles from \"../../../common/styles/commonStyles.module.css\";\r\nimport styles from './Login.module.css';\r\n\r\n\r\nexport const Login = () => {\r\n    const dispatch = useDispatch();\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.loginPage.isLoggedIn);\r\n    const error = useSelector<AppStoreType, string>(state => state.loginPage.error);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [rememberMe, setRememberMe] = useState(false);\r\n    const [emailError, setEmailError] = useState('')\r\n    const [passwordError, setPasswordError] = useState('')\r\n\r\n    const submitHandler = () => {\r\n        if (!email) {\r\n            setEmailError('Email is required!');\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n            setEmailError('Invalid email address');\r\n        } else if (!password) {\r\n            setPasswordError('Password is required!')\r\n        } else if (password.length <= 7) {\r\n            setPasswordError('Invalid password');\r\n        } else {\r\n            dispatch(logIn({email, password, rememberMe}));\r\n            dispatch(setLoginError(''));\r\n            setEmailError('');\r\n            setPasswordError('');\r\n        }\r\n    }\r\n\r\n    const onChangeEmailHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value);\r\n        setEmailError('');\r\n    }\r\n    const onChangePasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value);\r\n        setPasswordError('');\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n        return <Navigate to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={commonStyles.wrapper}>\r\n            <section className={commonStyles.section}>\r\n                <article className={commonStyles.article}>\r\n                    <h3>Login to Web App</h3>\r\n                    <div className={commonStyles.form}>\r\n                        <div>\r\n                            <SuperInputText onEnter={submitHandler}\r\n                                            className={commonStyles.input}\r\n                                            spanClassName={`${commonStyles.error} ${styles.errorEmail}`}\r\n                                            error={emailError}\r\n                                            onChange={onChangeEmailHandler}\r\n                                            value={email}\r\n                                            type=\"text\"\r\n                                            placeholder=\"Email\"/>\r\n                        </div>\r\n                        <div>\r\n                            <SuperInputText onEnter={submitHandler}\r\n                                            className={commonStyles.input}\r\n                                            spanClassName={`${commonStyles.error} ${styles.errorPassword}`}\r\n                                            error={passwordError || error}\r\n                                            onChange={onChangePasswordHandler}\r\n                                            value={password}\r\n                                            type=\"password\"\r\n                                            placeholder=\"Password\"/>\r\n                        </div>\r\n                        <div className={styles.checkboxRemember}>\r\n                            <SuperCheckbox className={styles.checkbox}\r\n                                           spanClassName={styles.remember}\r\n                                           onChangeChecked={setRememberMe}>\r\n                                Remember me on this computer\r\n                            </SuperCheckbox>\r\n                        </div>\r\n                        <SuperButton\r\n                            onClick={submitHandler}\r\n                            className={`${commonStyles.button} ${styles.button}`}>\r\n                            Log in\r\n                        </SuperButton>\r\n                    </div>\r\n                </article>\r\n                <div className={styles.reset}>\r\n                    Forgot your password? <Link to={`/pass_recovery`}>Click here</Link> to reset it or you can\r\n                    register <Link to={'/registration'}>here.</Link>\r\n                </div>\r\n            </section>\r\n        </div>\r\n\r\n    );\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {api} from \"../dal/api/api\";\r\nimport axios from \"axios\";\r\nimport {setAppLoading} from \"./appReducer\";\r\n\r\nconst initialState: InitialStateType = {\r\n    errorRegister: null,\r\n    isRegistered: false\r\n}\r\nexport const registerReducer = (state = initialState, action: RegisterActionsType) => {\r\n    switch (action.type) {\r\n        case \"REGISTER/SET_REGISTER\":\r\n            return {...state, isRegistered: action.value}\r\n        case \"REGISTER/SET_ERROR\":\r\n            return {...state, errorRegister: action.errorRegister}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst setRegister = (value: boolean) =>\r\n    ({type: 'REGISTER/SET_REGISTER', value} as const)\r\n\r\nexport const setRegisterError = (errorRegister: any) =>\r\n    ({type: 'REGISTER/SET_ERROR', errorRegister} as const)\r\n\r\nexport const register = (data: RegisterDataType) => async (dispatch: Dispatch) => {\r\n    dispatch(setAppLoading(true))\r\n    try {\r\n        const response = await api.register(data)\r\n        if (response.statusText === 'Created') {\r\n            dispatch(setRegister(true))\r\n        }\r\n    } catch (error) {\r\n        if (axios.isAxiosError(error) && error.response) {\r\n            if (error.response.data.isEmailValid && !error.response.data.isPassValid) {\r\n                dispatch(setRegisterError(error.response.data.passwordRegExp))\r\n            } else {\r\n                dispatch(setRegisterError(error.response.data.error))\r\n            }\r\n        }\r\n    } finally {\r\n        dispatch(setAppLoading(false))\r\n    }\r\n}\r\n\r\ntype SetRegisterAction = ReturnType<typeof setRegister>\r\ntype SetErrorAction = ReturnType<typeof setRegisterError>\r\ntype RegisterActionsType = SetRegisterAction | SetErrorAction\r\nexport type RegisterDataType = {\r\n    email: string\r\n    password: string\r\n}\r\ntype InitialStateType = { errorRegister: string | null, isRegistered: boolean }\r\n","import React, {useState} from \"react\";\r\nimport SuperInputText from \"../../../common/components/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../common/components/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {register, setRegisterError} from \"../../../bll/registerReducer\";\r\nimport commonStyles from \"../../../common/styles/commonStyles.module.css\";\r\nimport styles from \"./Register.module.css\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {Link, Navigate} from \"react-router-dom\";\r\n\r\nexport const Registration = () => {\r\n    const dispatch = useDispatch();\r\n    const isRegistered = useSelector<AppStoreType, boolean>(state => state.registerPage.isRegistered);\r\n    const error = useSelector<AppStoreType, string>(state => state.registerPage.errorRegister);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passwordCheck, setPasswordCheck] = useState('');\r\n\r\n    const onSubmit = () => {\r\n        if (!email || !password) {\r\n            dispatch(setRegisterError('Email and password is required!'));\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n            dispatch(setRegisterError('Invalid email address'));\r\n        } else if (password.length <= 7) {\r\n            dispatch(setRegisterError('Invalid password'));\r\n        } else if (password !== passwordCheck) {\r\n            dispatch(setRegisterError('Passwords must match'));\r\n        } else {\r\n            dispatch(register({email, password}));\r\n            dispatch(setRegisterError(''));\r\n        }\r\n    }\r\n\r\n    if (isRegistered) {\r\n        return <Navigate to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={commonStyles.wrapper}>\r\n            <section className={commonStyles.section}>\r\n                <article className={commonStyles.article}>\r\n                    <h3>Registration</h3>\r\n                    <div className={commonStyles.form}>\r\n                        <div>\r\n                            <SuperInputText\r\n                                onEnter={onSubmit}\r\n                                className={commonStyles.input}\r\n                                name={'email'}\r\n                                type={'text'}\r\n                                value={email}\r\n                                onChangeText={setEmail}\r\n                                placeholder={'Email'}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <SuperInputText\r\n                                onEnter={onSubmit}\r\n                                className={commonStyles.input}\r\n                                name={'password'}\r\n                                type={'password'}\r\n                                value={password}\r\n                                onChangeText={setPassword}\r\n                                placeholder={'Password'}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <SuperInputText\r\n                                onEnter={onSubmit}\r\n                                className={commonStyles.input}\r\n                                name={'passwordControl'}\r\n                                type={'password'}\r\n                                value={passwordCheck}\r\n                                onChangeText={setPasswordCheck}\r\n                                placeholder={'Password'}\r\n                            />\r\n                        </div>\r\n                        <div className={styles.btnWrapper}>\r\n                            <Link to={'/login'}>\r\n                                <SuperButton className={commonStyles.button}>\r\n                                    Back\r\n                                </SuperButton>\r\n                            </Link>\r\n                            <SuperButton\r\n                                className={commonStyles.button}\r\n                                onClick={onSubmit}>\r\n                                Registration\r\n                            </SuperButton>\r\n                        </div>\r\n                    </div>\r\n                </article>\r\n                {error && <div className={styles.error}>{error}</div>}\r\n            </section>\r\n        </div>\r\n    );\r\n}","import { Dispatch } from \"redux\"\r\nimport {setAppLoading} from \"./appReducer\";\r\nimport {api} from \"../dal/api/api\";\r\nimport axios from \"axios\";\r\n\r\nexport type NewPassInitialStateType = {\r\n    setNewPassword: string,\r\n    error: string,\r\n}\r\n\r\nconst initialState: NewPassInitialStateType = {\r\n    setNewPassword: \"\",\r\n    error: \"\",\r\n}\r\n\r\nexport const newPassReducer = (state = initialState,\r\n                               action: NewPassActionsType): NewPassInitialStateType => {\r\n    switch (action.type) {\r\n        case \"NEW_PASS/SET-NEW-PASSWORD\":\r\n            return {...state, setNewPassword: action.info}\r\n        case \"NEW_PASS/SET-ERROR-RESPONSE\":\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport type NewPassActionsType =\r\n    ReturnType<typeof setNewPass>\r\n    | ReturnType<typeof errorResponse>\r\n\r\nexport const setNewPass = (info: string) => ({type: \"NEW_PASS/SET-NEW-PASSWORD\", info} as const);\r\nexport const errorResponse = (error: string) => ({type: \"NEW_PASS/SET-ERROR-RESPONSE\", error} as const);\r\n\r\nexport const createNewPassword = (newPassword: string, token: string) => async (dispatch: Dispatch) => {\r\n\r\n    dispatch(setAppLoading(true));\r\n\r\n    try {\r\n        const response = await api.setNewPassword(newPassword, token);\r\n        dispatch(setNewPass(response.data.info));\r\n    }\r\n    catch (error) {\r\n        if (axios.isAxiosError(error) && error.response) {\r\n            dispatch(errorResponse(error.response.data.error));\r\n        }\r\n    }\r\n    finally {\r\n        dispatch(setAppLoading(false));\r\n    }\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport commonStyles from \"../../../common/styles/commonStyles.module.css\";\r\nimport styles from \"./NewPass.module.css\"\r\nimport SuperInputText from \"../../../common/components/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../common/components/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {createNewPassword, errorResponse, NewPassInitialStateType} from \"../../../bll/newPassReducer\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\n\r\nexport const NewPass = () => {\r\n    const status = useSelector<AppStoreType, boolean>(state => state.app.loading);\r\n    const setNewPassState = useSelector<AppStoreType, NewPassInitialStateType>(state => state.newPassPage);\r\n    const dispatch = useDispatch();\r\n\r\n    const {token} = useParams();\r\n\r\n    const [newPassword, setNewPassword] = useState<string>(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState<string>(\"\");\r\n\r\n    const onChangeNewPassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setNewPassword(event.currentTarget.value);\r\n        dispatch(errorResponse(\"\"));\r\n    }\r\n\r\n    const onChangeCheckPassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setConfirmPassword(event.currentTarget.value);\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        if (!newPassword || !confirmPassword) {\r\n            dispatch(errorResponse('Password is required!'))\r\n        } else if (newPassword !== confirmPassword) {\r\n            dispatch(errorResponse('Passwords should be equal!'))\r\n        } else if (newPassword.length <= 7) {\r\n            dispatch(errorResponse('Invalid password'))\r\n        } else {\r\n            dispatch(createNewPassword(newPassword, token as string));\r\n            dispatch(errorResponse(''))\r\n        }\r\n    }\r\n\r\n    if (setNewPassState.setNewPassword) {\r\n        return <Navigate to={\"/login\"}/>;\r\n    }\r\n\r\n    return (\r\n        <div className={commonStyles.wrapper}>\r\n            <section className={commonStyles.section}>\r\n                <article className={commonStyles.article}>\r\n                    <h3>Create new password</h3>\r\n                    <div className={commonStyles.form}>\r\n                        <div>\r\n                            <SuperInputText\r\n                                onEnter={onSubmit}\r\n                                className={commonStyles.input}\r\n                                name={'new password'}\r\n                                type={'password'}\r\n                                value={newPassword}\r\n                                onChange={onChangeNewPassword}\r\n                                placeholder={'New password'}/>\r\n                            <SuperInputText\r\n                                onEnter={onSubmit}\r\n                                className={commonStyles.input}\r\n                                spanClassName={`${commonStyles.error} ${styles.error}`}\r\n                                name={'confirm password'}\r\n                                type={'password'}\r\n                                value={confirmPassword}\r\n                                onChange={onChangeCheckPassword}\r\n                                placeholder={'Confirm password'}\r\n                                error={setNewPassState.error}/>\r\n                        </div>\r\n                        <div>\r\n                            <SuperButton\r\n                                className={`${commonStyles.button} ${status && commonStyles.disabled} ${styles.button} `}\r\n                                onClick={onSubmit}\r\n                                disabled={status}>\r\n                                Create password\r\n                            </SuperButton>\r\n                        </div>\r\n                    </div>\r\n                </article>\r\n            </section>\r\n        </div>\r\n    );\r\n}","import axios from \"axios\";\r\nimport {Dispatch} from \"redux\";\r\nimport {api} from \"../dal/api/api\";\r\nimport {setAppLoading} from \"./appReducer\";\r\n\r\nconst initialState: PassRecoverInitialStateType = {\r\n    mailSent: \"\",\r\n    error: \"\",\r\n}\r\n\r\nexport const recoverPassReducer = (state = initialState,\r\n                                   action: RecoverPassActionsType): PassRecoverInitialStateType => {\r\n    switch (action.type) {\r\n        case \"PASS_RECOVER/SET-MAIL-SENT\":\r\n            return {...state, mailSent: action.info}\r\n        case \"PASS_RECOVER/SET-ERROR-RESPONSE\":\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const mailSent = (info: string) => ({type: \"PASS_RECOVER/SET-MAIL-SENT\", info} as const);\r\nexport const errorResponse = (error: string) => ({type: \"PASS_RECOVER/SET-ERROR-RESPONSE\", error} as const);\r\n\r\nexport const recoveryPass = (passRecoverMail: string) => async (dispatch: Dispatch) => {\r\n\r\n    dispatch(setAppLoading(true));\r\n\r\n    try {\r\n        const response = await api.forgotPassword(passRecoverMail);\r\n        dispatch(mailSent(response.data.info));\r\n    } catch (error) {\r\n        if (axios.isAxiosError(error) && error.response) {\r\n            dispatch(errorResponse(error.response.data.error));\r\n        }\r\n    } finally {\r\n        dispatch(setAppLoading(false));\r\n    }\r\n}\r\n\r\nexport type RecoverPassActionsType = ReturnType<typeof mailSent>\r\n    | ReturnType<typeof errorResponse>\r\n\r\nexport type PassRecoverInitialStateType = {\r\n    mailSent: string,\r\n    error: string,\r\n}\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport commonStyles from \"../../../common/styles/commonStyles.module.css\";\r\nimport styles from \"./PassRecover.module.css\";\r\nimport SuperInputText from \"../../../common/components/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../common/components/SuperButton/SuperButton\";\r\nimport {errorResponse, PassRecoverInitialStateType, recoveryPass} from \"../../../bll/passRecoverReducer\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {Link, Navigate} from \"react-router-dom\";\r\n\r\nexport const PassRecover = () => {\r\n    const status = useSelector<AppStoreType, boolean>(state => state.app.loading);\r\n    const recoverPassState = useSelector<AppStoreType, PassRecoverInitialStateType>(state => state.recoverPassPage);\r\n    const dispatch = useDispatch();\r\n\r\n    const [recoverPassMail, setRecoverPassMail] = useState<string>(\"\");\r\n\r\n    const onChangeEnterMail = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setRecoverPassMail(event.currentTarget.value);\r\n        dispatch(errorResponse(\"\"));\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        if (!recoverPassMail) {\r\n            dispatch(errorResponse('Email is required!'))\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(recoverPassMail)) {\r\n            dispatch(errorResponse('Invalid email address'));\r\n        } else {\r\n            dispatch(recoveryPass(recoverPassMail));\r\n            dispatch(errorResponse(''));\r\n        }\r\n    }\r\n\r\n    if (recoverPassState.mailSent) {\r\n        return <Navigate to={'/check-email'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={commonStyles.wrapper}>\r\n            <section className={commonStyles.section}>\r\n                <article className={commonStyles.article}>\r\n                    <h3>Password Recovery</h3>\r\n                    <div className={commonStyles.form}>\r\n                        <div>\r\n                            <SuperInputText\r\n                                onEnter={onSubmit}\r\n                                className={commonStyles.input}\r\n                                spanClassName={styles.error}\r\n                                name={'email'}\r\n                                type={'text'}\r\n                                value={recoverPassMail}\r\n                                onChange={onChangeEnterMail}\r\n                                placeholder={'Email'}\r\n                                error={recoverPassState.error}\r\n                            />\r\n                        </div>\r\n                        <div className={styles.btnWrapper}>\r\n                            <Link to={'/login'}>\r\n                                <SuperButton className={commonStyles.button}>\r\n                                    Back\r\n                                </SuperButton>\r\n                            </Link>\r\n                            <SuperButton\r\n                                className={`${commonStyles.button} ${styles.button} ${status ? commonStyles.disabled : ''}`}\r\n                                onClick={onSubmit}\r\n                                disabled={status}>\r\n                                Send instructions\r\n                            </SuperButton>\r\n                        </div>\r\n                    </div>\r\n                </article>\r\n            </section>\r\n        </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/noAvatar.6c53c0a1.png\";","import React, {ChangeEvent, useState, KeyboardEvent} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {setProfileError, updateProfile} from \"../../../bll/profileReducer\";\r\nimport commonStyles from \"../../../common/styles/commonStyles.module.css\";\r\nimport styles from \"./Profile.module.css\";\r\nimport SuperInputText from \"../../../common/components/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../common/components/SuperButton/SuperButton\";\r\nimport {Link, Navigate} from \"react-router-dom\";\r\nimport {logOut} from \"../../../bll/loginReducer\";\r\nimport noAvatar from '../../../common/images/noAvatar.png';\r\n\r\nexport const Profile = () => {\r\n    const dispatch = useDispatch();\r\n    const profileName = useSelector<AppStoreType, string>(state => state.profilePage.name);\r\n    const profileAvatar = useSelector<AppStoreType, string>(state => state.profilePage.avatar);\r\n    const profileEmail = useSelector<AppStoreType, string>(state => state.profilePage.email);\r\n    const error = useSelector<AppStoreType, string>(state => state.profilePage.error);\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.loginPage.isLoggedIn);\r\n\r\n    const [name, setName] = useState(profileName);\r\n    const [avatar, setAvatar] = useState('')\r\n    const [editName, setEditName] = useState(false);\r\n\r\n    const onDoubleClickNameHandler = () => setEditName(true);\r\n    const onBlurNameHandler = () => {\r\n        setEditName(false);\r\n        onSubmitName();\r\n    }\r\n    const changeNameHandler = (e: ChangeEvent<HTMLInputElement>) => setName(e.currentTarget.value.trim());\r\n    const changeAvatarHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setAvatar(e.currentTarget.value.trim());\r\n        dispatch(setProfileError(''));\r\n    }\r\n    const selectAllHandler = (e: ChangeEvent<HTMLInputElement>) => e.currentTarget.select();\r\n    const onEnterHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            setEditName(false);\r\n            onSubmitName();\r\n        }\r\n    }\r\n\r\n    const onSubmitName = () => {\r\n        if (name && (name !== profileName)) {\r\n            dispatch(updateProfile({name}));\r\n        }\r\n        if (name.trim() === '') {\r\n            setName(profileName);\r\n        }\r\n    }\r\n\r\n    const onSubmitAvatar = () => {\r\n        if (avatar && (/\\.(gif|jpg|jpeg|webp|png)$/i).test(avatar)) {\r\n            dispatch(updateProfile({avatar}));\r\n            setAvatar('');\r\n        } else {\r\n            dispatch(setProfileError('Avatar link incorrect!'));\r\n        }\r\n    }\r\n\r\n    const onLogout = () => dispatch(logOut());\r\n\r\n    if (!isLoggedIn) {\r\n        return <Navigate to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={commonStyles.wrapper}>\r\n            <section className={commonStyles.section}>\r\n                <article className={commonStyles.article}>\r\n                    <h3>Your profile</h3>\r\n                    <div className={commonStyles.form}>\r\n                        <div className={styles.avatar}>\r\n                            <img src={profileAvatar ? profileAvatar : noAvatar}\r\n                                 alt=\"avatar\"/>\r\n                        </div>\r\n                        <div className={styles.info}>\r\n                            {\r\n                                editName ?\r\n                                    <input value={name} onChange={changeNameHandler} type=\"text\"\r\n                                           onBlur={onBlurNameHandler}\r\n                                           onFocus={selectAllHandler}\r\n                                           onKeyPress={onEnterHandler}\r\n                                           autoFocus\r\n                                    />\r\n                                    :\r\n                                    <span onDoubleClick={onDoubleClickNameHandler}>\r\n                                    Name: {profileName}\r\n                                </span>\r\n                            }\r\n                        </div>\r\n                        <div className={styles.info}>Email: {profileEmail}</div>\r\n                        <div>\r\n                            <SuperInputText\r\n                                onEnter={onSubmitAvatar}\r\n                                type={'text'}\r\n                                className={commonStyles.input}\r\n                                spanClassName={`${commonStyles.error} ${styles.error}`}\r\n                                placeholder={'Input avatar link'}\r\n                                value={avatar}\r\n                                onChange={changeAvatarHandler}\r\n                                error={error}\r\n                            />\r\n                        </div>\r\n                        <div className={styles.btnWrapper}>\r\n                            <SuperButton\r\n                                className={commonStyles.button}\r\n                                onClick={onSubmitAvatar}>\r\n                                Change avatar\r\n                            </SuperButton>\r\n                            <Link to={'/packs'}>\r\n                                <SuperButton className={commonStyles.button}>\r\n                                    Packs\r\n                                </SuperButton>\r\n                            </Link>\r\n                            <SuperButton\r\n                                className={commonStyles.button}\r\n                                onClick={onLogout}>LogOut\r\n                            </SuperButton>\r\n                        </div>\r\n                    </div>\r\n                </article>\r\n            </section>\r\n        </div>\r\n\r\n    );\r\n}","import styles from './LoadingLine.module.css'\r\n\r\nexport const LoadingLine = () => {\r\n  return (\r\n    <div className={styles.loadingLine}>\r\n      {/*<h3>Loading is in progress, do not rush, be patient</h3>*/}\r\n      <div className={styles.line}>\r\n        <div className={styles.shadow}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/checkMail.8bd711f4.png\";","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport checkMail from '../../../common/images/checkMail.png';\r\nimport s from './CheckMail.module.css';\r\nimport commonStyles from \"../../../common/styles/commonStyles.module.css\";\r\n\r\nexport const CheckEmail = () => {\r\n    const mailSent = useSelector<AppStoreType, string>(state => state.recoverPassPage.mailSent);\r\n\r\n    return (\r\n        <div className={commonStyles.wrapper}>\r\n            <section className={commonStyles.section}>\r\n                <article className={commonStyles.article}>\r\n                    <h3>Check your email</h3>\r\n                    <div className={`${commonStyles.form} ${s.message}`}>\r\n                            <img className={s.image} src={checkMail} alt={'checkMail'}/>\r\n                        Password recovery instructions have been {mailSent} to your email\r\n                    </div>\r\n                </article>\r\n            </section>\r\n        </div>\r\n    );\r\n}","import {setAppLoading} from \"./appReducer\";\r\nimport axios from \"axios\";\r\nimport {api, GetPacksRequestType} from \"../dal/api/api\";\r\nimport {AppStoreType, AppThunk} from \"./store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst initialState: InitialStatePackPageType = {\r\n    cardPacks: [],\r\n    cardPacksTotalCount: 0,\r\n    maxCardsCount: 0,\r\n    minCardsCount: 0,\r\n    page: 1,\r\n    pageCount: 10,\r\n    error: '',\r\n    user_id: '',\r\n    token: '',\r\n}\r\nexport const packReducer = (state = initialState, action: PackActionsType): InitialStatePackPageType => {\r\n    switch (action.type) {\r\n        case \"PACK/SET-PACKS-DATA\":\r\n            return {...state, ...action.data}\r\n        case \"PACK/CLEAR-PACKS\":\r\n            return initialState;\r\n        case \"PACK/SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"PACK/SET-SORT\":\r\n            if (action.sortType === \"name\" ? action.sort === 'up' : action.sort === 'down') {\r\n                return {\r\n                    ...state, cardPacks: [...state.cardPacks.sort((a, b) => {\r\n                        let A = action.sortType === 'name' ? a[action.sortType].toLowerCase() : a[action.sortType];\r\n                        let B = action.sortType === 'name' ? b[action.sortType].toLowerCase() : b[action.sortType];\r\n                        if (A < B) return -1;\r\n                        else if (A > B) return 1;\r\n                        else return 0\r\n                    })]\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state, cardPacks: [...state.cardPacks.sort((a, b) => {\r\n                        let A = action.sortType === 'name' ? a[action.sortType].toLowerCase() : a[action.sortType];\r\n                        let B = action.sortType === 'name' ? b[action.sortType].toLowerCase() : b[action.sortType];\r\n                        if (A > B) return -1;\r\n                        else if (A < B) return 1;\r\n                        else return 0;\r\n                    })]\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setPacksData = (data: GetPacksRequestType) => ({type: 'PACK/SET-PACKS-DATA', data} as const)\r\nexport const clearPacksData = () => ({type: 'PACK/CLEAR-PACKS'} as const)\r\nexport const setPacksError = (error: string) => ({type: 'PACK/SET-ERROR', error} as const)\r\nexport const setPacksSortData = (sort: 'up' | 'down', sortType: 'name' | 'cardsCount' | 'updated') =>\r\n    ({type: 'PACK/SET-SORT', sort, sortType} as const)\r\n\r\n//thunks\r\nexport const getPacks = (searchParams?: string) =>\r\n    async (dispatch: Dispatch, getState: () => AppStoreType) => {\r\n        dispatch(setAppLoading(true));\r\n        dispatch(setPacksError(''));\r\n        try {\r\n            const response = await api.getPacks({\r\n                page: getState().packPage.page,\r\n                user_id: getState().packPage.user_id,\r\n                pageCount: getState().packPage.pageCount,\r\n                packName: searchParams && searchParams,\r\n            })\r\n            dispatch(setPacksData(response.data))\r\n        } catch (error) {\r\n            if (axios.isAxiosError(error) && error.response) {\r\n                dispatch(setPacksError(error.response.data.error));\r\n            } else if (axios.isAxiosError(error)) {\r\n                dispatch(setPacksError(error.message));\r\n            }\r\n        } finally {\r\n            dispatch(setAppLoading(false));\r\n        }\r\n    }\r\n\r\nexport const addPack = (name: string): AppThunk =>\r\n    async (dispatch) => {\r\n        dispatch(setAppLoading(true));\r\n        try {\r\n            await api.addPack(name);\r\n            dispatch(getPacks());\r\n        } catch (error) {\r\n            if (axios.isAxiosError(error) && error.response) {\r\n                dispatch(setPacksError(error.response.data.error));\r\n            } else if (axios.isAxiosError(error)) {\r\n                dispatch(setPacksError(error.message));\r\n            }\r\n        } finally {\r\n            dispatch(setAppLoading(false));\r\n        }\r\n    }\r\n\r\nexport const deletePack = (packId: string): AppThunk =>\r\n    async (dispatch) => {\r\n        dispatch(setAppLoading(true));\r\n        try {\r\n            await api.deletePack(packId);\r\n            await dispatch(getPacks());\r\n        } catch (error) {\r\n            if (axios.isAxiosError(error) && error.response) {\r\n                dispatch(setPacksError(error.response.data.error));\r\n            } else if (axios.isAxiosError(error)) {\r\n                dispatch(setPacksError(error.message));\r\n            }\r\n        } finally {\r\n            dispatch(setAppLoading(false));\r\n        }\r\n    }\r\nexport const updatePack = (packId: string, name: string): AppThunk =>\r\n    async (dispatch, getState: () => AppStoreType) => {\r\n        dispatch(setAppLoading(true));\r\n        try {\r\n            await api.updatePack(packId, name);\r\n            await dispatch(getPacks());\r\n        } catch (error) {\r\n            if (axios.isAxiosError(error) && error.response) {\r\n                dispatch(setPacksError(error.response.data.error));\r\n            } else if (axios.isAxiosError(error)) {\r\n                dispatch(setPacksError(error.message));\r\n            }\r\n        } finally {\r\n            dispatch(setAppLoading(false));\r\n        }\r\n    }\r\n\r\nexport type InitialStatePackPageType = {\r\n    cardPacks: PackType[]\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n    error: string\r\n    user_id: string\r\n    token: string\r\n}\r\nexport type PackType = {\r\n    _id: string\r\n    user_id: string\r\n    user_name: string\r\n    private: boolean\r\n    name: string\r\n    path: string\r\n    grade: number\r\n    shots: number\r\n    cardsCount: number\r\n    type: string\r\n    rating: number\r\n    created: Date\r\n    updated: Date\r\n    more_id: string\r\n    __v: number\r\n}\r\ntype PackActionsType = ReturnType<typeof setPacksData>\r\n    | ReturnType<typeof clearPacksData>\r\n    | ReturnType<typeof setPacksError>\r\n    | ReturnType<typeof setPacksSortData>","import React from \"react\";\r\nimport s from './Paginator.module.css';\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\n\r\ntype PropsType = {\r\n    totalCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onChangedPage: (n: number) => void\r\n}\r\nexport const Paginator = ({totalCount, pageSize, currentPage, onChangedPage}: PropsType) => {\r\n    const isLoading = useSelector<AppStoreType, boolean>(state => state.app.loading);\r\n    const pageCounts = Math.ceil(totalCount / pageSize);\r\n    const pages = [];\r\n    //start\r\n    let pageLimit = 10;\r\n    let startPage = currentPage - pageLimit / 2;\r\n    let endPage = currentPage + pageLimit / 2;\r\n\r\n    if (startPage < 1) {\r\n        startPage = 1;\r\n        endPage = pageLimit;\r\n    }\r\n    if (endPage > pageCounts) {\r\n        endPage = pageCounts;\r\n        startPage = pageCounts - pageLimit;\r\n    }\r\n    for (let i = startPage; i <= endPage; i++) {\r\n        if (i > 0) {\r\n            pages.push(i);\r\n        }\r\n    }\r\n    //end\r\n    if (!pages.length) {\r\n        pages.push(1)\r\n    }\r\n\r\n    const pageList = pages.map(n => {\r\n        const onClickGetByPage = () => !isLoading && onChangedPage(n);\r\n\r\n        return (\r\n            <span key={n}\r\n                  className={currentPage === n ? s.currentPage : s.page}\r\n                  onClick={onClickGetByPage}>\r\n                {n}\r\n            </span>\r\n        );\r\n    })\r\n\r\n    //Functions Buttons\r\n    const firstPageHandler = () => onChangedPage(1);\r\n    const lastPageHandler = () => onChangedPage(pageCounts);\r\n    // const nextPageHandler = () => onChangedPage(currentPage + 1);\r\n    // const previousPageHandler = () => onChangedPage(currentPage - 1);\r\n\r\n    //COMPLETE JSX\r\n    return (\r\n        <div className={s.pagesWrapper}>\r\n            <span className={s.page} onClick={firstPageHandler}>{'<<'}</span>\r\n            {/*<span className={s.page} onClick={previousPageHandler}>{'<'}</span>*/}\r\n            <div className={s.pageList}>\r\n                {pageList}\r\n            </div>\r\n            {/*<span className={s.page} onClick={nextPageHandler}>{'>'}</span>*/}\r\n            <span className={s.page} onClick={lastPageHandler}>{'>>'}</span>\r\n        </div>\r\n    );\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport styles from './Search.module.css';\r\nimport SuperInputText from \"../SuperInputText/SuperInputText\";\r\nimport commonStyles from \"../../styles/commonStyles.module.css\";\r\nimport SuperButton from \"../SuperButton/SuperButton\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\n\r\ntype PropsType = {\r\n    searchFunction: Function\r\n}\r\n\r\nexport const Search = ({searchFunction}: PropsType) => {\r\n    const isLoading = useSelector<AppStoreType, boolean>(state => state.app.loading);\r\n    const [search, setSearch] = useState<string>('')\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(e.currentTarget.value.trim());\r\n    }\r\n    const searchSubmit = () => {\r\n        searchFunction(search);\r\n    }\r\n    const clearSearch = () => {\r\n        searchFunction();\r\n        setSearch('');\r\n    }\r\n\r\n    return (\r\n        <div className={styles.searchWrapper}>\r\n            <SuperInputText\r\n                onEnter={searchSubmit}\r\n                className={`${commonStyles.input} ${styles.search}`}\r\n                type={'text'}\r\n                value={search}\r\n                onChange={onChangeHandler}\r\n                placeholder={'Search'}\r\n            />\r\n            <SuperButton\r\n                disabled={isLoading}\r\n                className={`${commonStyles.button} ${isLoading && commonStyles.disabled}`}\r\n                onClick={searchSubmit}>\r\n                Search\r\n            </SuperButton>\r\n            <SuperButton\r\n                disabled={isLoading}\r\n                className={`${commonStyles.button} ${isLoading && commonStyles.disabled}`}\r\n                onClick={clearSearch}>\r\n                Clear\r\n            </SuperButton>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport styles from \"./Sort.module.css\";\r\nimport commonStyles from \"../../styles/commonStyles.module.css\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\n\r\ntype PropsType = {\r\n    sortHandlerUp: () => void\r\n    sortHandlerDown: () => void\r\n    title: string\r\n}\r\n\r\nexport const Sort = ({sortHandlerUp, sortHandlerDown, title}: PropsType) => {\r\n    const isLoading = useSelector<AppStoreType, boolean>(state => state.app.loading);\r\n\r\n    return (\r\n        <div className={styles.updated}>\r\n            {title}\r\n            <div className={styles.updatedBtnWrapper}>\r\n                <button\r\n                    className={`${commonStyles.button} ${isLoading && commonStyles.disabled} ${styles.updatedBtn}`}\r\n                    onClick={sortHandlerUp}>\r\n                    &and;\r\n                </button>\r\n                <button\r\n                    className={`${commonStyles.button} ${isLoading && commonStyles.disabled} ${styles.updatedBtn}`}\r\n                    onClick={sortHandlerDown}>\r\n                    &or;\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import styles from './Modal.module.css';\r\nimport React from \"react\";\r\n\r\ntype PropsType = {\r\n    title: string\r\n    setShow: (show: boolean) => void\r\n    left: number\r\n    top: number\r\n}\r\n\r\nexport const Modal: React.FC<PropsType> = ({setShow, left, top, children, title}) => {\r\n\r\n    const hideWindow = () => setShow(false);\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.modalBack} onClick={hideWindow}/>\r\n            <div className={styles.modal} style={{left: `${left}%`, top: `${top}%`}}>\r\n                <div className={styles.title}>{title}</div>\r\n                {children}\r\n            </div>\r\n        </>\r\n    );\r\n}","import React, {useState} from \"react\";\r\nimport SuperInputText from \"../../SuperInputText/SuperInputText\";\r\nimport commonStyles from \"../../../styles/commonStyles.module.css\";\r\nimport SuperButton from \"../../SuperButton/SuperButton\";\r\nimport styles from './ItemModal.module.css';\r\nimport {Modal} from \"../Modal/Modal\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../bll/store\";\r\nimport {CardType} from \"../../../../dal/api/api\";\r\n\r\ntype PropsType = {\r\n    callback: (name: string, answer?: string) => void\r\n    setShow: (show: boolean) => void\r\n    type?: 'update pack' | 'add pack' | 'update card' | 'add card'\r\n    cardId?: string\r\n}\r\n\r\nexport const ItemModal = ({callback, setShow, type, cardId}: PropsType) => {\r\n    const cards = useSelector<AppStoreType, CardType[]>(state => state.cardPage.cards);\r\n    const card = cards.find(c => c._id === cardId);\r\n\r\n    const [inputOneValue, setInputOneValue] = useState(card ? card.answer : '');\r\n    const [inputTwoValue, setInputTwoValue] = useState(card ? card.question : '');\r\n    const [error, setError] = useState('');\r\n\r\n    const onClickApplyPack = () => {\r\n        if (inputOneValue.trim() !== '') {\r\n            callback(inputOneValue);\r\n            setShow(false);\r\n        } else {\r\n            setError('Incorrect pack name, please try again.')\r\n        }\r\n    }\r\n\r\n    const onClickApplyCard = () => {\r\n        if (inputOneValue.trim() !== '' && inputTwoValue.trim() !== '') {\r\n            callback(inputOneValue, inputTwoValue);\r\n            setShow(false);\r\n        } else {\r\n            setError('Incorrect name, both fields must be filled, please try again.')\r\n        }\r\n    }\r\n\r\n    if (type === 'add card' || type === 'update card') {\r\n        return (\r\n            <Modal top={35} left={40}\r\n                   title={type === \"update card\" ? 'Update card' : 'Add card'}\r\n                   setShow={setShow}>\r\n                <div>\r\n                    <SuperInputText className={commonStyles.input}\r\n                                    placeholder={\"Question\"}\r\n                                    value={inputOneValue}\r\n                                    onChangeText={setInputOneValue}\r\n                                    onEnter={onClickApplyCard}\r\n                                    autoFocus\r\n                    />\r\n                    <SuperInputText className={commonStyles.input}\r\n                                    placeholder={\"Answer\"}\r\n                                    value={inputTwoValue}\r\n                                    onEnter={onClickApplyCard}\r\n                                    onChangeText={setInputTwoValue}\r\n                    />\r\n                    {error && <div className={`${commonStyles.error} ${styles.errorCards}`}>{error}</div>}\r\n                    <div className={styles.modalBtnWrapper}>\r\n                        <SuperButton onClick={onClickApplyCard}\r\n                                     className={commonStyles.button}>\r\n                            Apply\r\n                        </SuperButton>\r\n                        <SuperButton onClick={() => setShow(false)}\r\n                                     className={commonStyles.button}>\r\n                            Cancel\r\n                        </SuperButton>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Modal top={35} left={40}\r\n               title={type === \"update pack\" ? 'Update pack' : 'Add pack'}\r\n               setShow={setShow}>\r\n            <div>\r\n                <SuperInputText className={commonStyles.input}\r\n                                onEnter={onClickApplyPack}\r\n                                placeholder={\"New pack name\"}\r\n                                onChangeText={setInputOneValue}\r\n                                autoFocus/>\r\n                {error && <div className={`${commonStyles.error} ${styles.error}`}>{error}</div>}\r\n                <div className={styles.modalBtnWrapper}>\r\n                    <SuperButton onClick={onClickApplyPack}\r\n                                 className={commonStyles.button}>\r\n                        Apply\r\n                    </SuperButton>\r\n                    <SuperButton onClick={() => setShow(false)}\r\n                                 className={commonStyles.button}>\r\n                        Cancel\r\n                    </SuperButton>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport SuperButton from \"../../../../common/components/SuperButton/SuperButton\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../bll/store\";\r\nimport styles from './Pack.module.css';\r\nimport commonStyles from \"../../../../common/styles/commonStyles.module.css\";\r\n\r\ntype PropsType = {\r\n    id: string\r\n    name: string\r\n    cardsCount: number\r\n    updated: Date\r\n    authorId: string\r\n    deletePack: (packId: string) => void\r\n    updatePackHandler: (packId: string) => void\r\n}\r\n\r\nexport const Pack = ({id, name, cardsCount, updated, authorId, deletePack, updatePackHandler}: PropsType) => {\r\n    const isLoading = useSelector<AppStoreType, boolean>(state => state.app.loading);\r\n    const userId = useSelector<AppStoreType, string>(state => state.profilePage._id);\r\n    const packUpdateDate = new Date(updated)\r\n    const buttonStyle = `${commonStyles.button} ${isLoading && commonStyles.disabled}`;\r\n    const learnButtonStyle = `${commonStyles.button} ${(isLoading || !cardsCount) && commonStyles.disabled}`;\r\n    return (\r\n        <tr key={id}>\r\n            <td>{name}</td>\r\n            <td>{cardsCount}</td>\r\n            <td>{packUpdateDate.toLocaleString('ru')}</td>\r\n            <td>\r\n                <div className={styles.buttonWrapper}>\r\n                    <Link to={`/cards/${id}`}>\r\n                        <SuperButton\r\n                            disabled={isLoading}\r\n                            className={buttonStyle}>\r\n                            Cards\r\n                        </SuperButton>\r\n                    </Link>\r\n                    <Link to={`/learn/${id}`}>\r\n                        <SuperButton\r\n                            disabled={isLoading || !cardsCount}\r\n                            className={learnButtonStyle}>\r\n                            Learn\r\n                        </SuperButton>\r\n                    </Link>\r\n                    {\r\n                        userId === authorId &&\r\n                        <>\r\n                            <SuperButton\r\n                                disabled={isLoading}\r\n                                className={buttonStyle}\r\n                                onClick={() => deletePack(id)}>\r\n                                Delete\r\n                            </SuperButton>\r\n                            <SuperButton\r\n                                disabled={isLoading}\r\n                                className={buttonStyle}\r\n                                onClick={() => updatePackHandler(id)}>\r\n                                Update\r\n                            </SuperButton>\r\n                        </>\r\n                    }\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    );\r\n}","import React from \"react\";\r\nimport {Modal} from \"../Modal/Modal\";\r\nimport styles from './QuestionModal.module.css';\r\nimport SuperButton from \"../../SuperButton/SuperButton\";\r\nimport commonStyles from \"../../../styles/commonStyles.module.css\";\r\n\r\ntype PropsType = {\r\n    setShow: (show: boolean) => void\r\n    callback: () => void\r\n}\r\n\r\nexport const QuestionModal = ({setShow, callback}: PropsType) => {\r\n    const onClickApplyPack = () => {\r\n        callback();\r\n        setShow(false);\r\n    }\r\n\r\n    return (\r\n        <Modal left={42} top={40} title={'Are you seriously?'} setShow={setShow}>\r\n            <div>\r\n                <div className={styles.modalBtnWrapper}>\r\n                    <SuperButton onClick={onClickApplyPack}\r\n                                 className={commonStyles.button}>\r\n                        Yes\r\n                    </SuperButton>\r\n                    <SuperButton onClick={() => setShow(false)}\r\n                                 className={commonStyles.button}>\r\n                        Cancel\r\n                    </SuperButton>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n}","import React, {useState} from \"react\";\r\nimport styles from './ErrorModal.module.css';\r\n\r\ntype PropsType = {\r\n    text: string\r\n}\r\n\r\nexport const ErrorModal = ({text}: PropsType) => {\r\n    const [opacity, setOpacity] = useState('1');\r\n\r\n    setTimeout(() => {\r\n        setOpacity('0');\r\n    }, 3000)\r\n\r\n    return (\r\n        <div style={{opacity: `${opacity}`}} className={styles.error}>{text}</div>\r\n    );\r\n}","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport commonStyles from \"../../../common/styles/commonStyles.module.css\";\r\nimport styles from \"./Packs.module.css\"\r\nimport {\r\n    addPack,\r\n    deletePack,\r\n    getPacks,\r\n    InitialStatePackPageType,\r\n    setPacksData,\r\n    setPacksError,\r\n    setPacksSortData,\r\n    updatePack\r\n} from \"../../../bll/packReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {Paginator} from \"../../../common/components/Paginator/Paginator\";\r\nimport SuperButton from \"../../../common/components/SuperButton/SuperButton\";\r\nimport {Link, Navigate} from \"react-router-dom\";\r\nimport {Search} from \"../../../common/components/Search/Search\";\r\nimport {Sort} from \"../../../common/components/Sort/Sort\";\r\nimport {ItemModal} from \"../../../common/components/Modals/ItemModal/ItemModal\";\r\nimport {Pack} from \"./Pack/Pack\";\r\nimport {QuestionModal} from \"../../../common/components/Modals/QuestionModal/QuestionModal\";\r\nimport {ErrorModal} from \"../../../common/components/Modals/ErrorModal/ErrorModal\";\r\n\r\nexport const Packs = () => {\r\n    const {\r\n        cardPacks,\r\n        cardPacksTotalCount,\r\n        page,\r\n        pageCount,\r\n        error,\r\n        user_id,\r\n    } = useSelector<AppStoreType, InitialStatePackPageType>(state => state.packPage)\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.loginPage.isLoggedIn);\r\n    const userId = useSelector<AppStoreType, string>(state => state.profilePage._id);\r\n    const isLoading = useSelector<AppStoreType, boolean>(state => state.app.loading);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getPacks());\r\n    }, [dispatch])\r\n\r\n    const onChangedPage = (currentPage: number) => {\r\n        dispatch(setPacksError(''));\r\n        dispatch(setPacksData({page: currentPage}));\r\n        dispatch(getPacks());\r\n    }\r\n\r\n    const [showAddModal, setShowAddModal] = useState(false);\r\n    const [showUpdateModal, setShowUpdateModal] = useState(false);\r\n    const [showQuestionModal, setShowQuestionModal] = useState(false);\r\n    const addPackHandler = () => setShowAddModal(true);\r\n    const addPackModalCallback = (name: string) => dispatch(addPack(name));\r\n\r\n    const checkMyHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.currentTarget.checked) {\r\n            dispatch(setPacksData({user_id: userId}));\r\n            dispatch(getPacks());\r\n        } else {\r\n            dispatch(setPacksData({user_id: ''}));\r\n            dispatch(getPacks());\r\n        }\r\n    }\r\n    const searchHandler = (title: string) => dispatch(getPacks(title));\r\n    const sortNameHandlerUp = () => dispatch(setPacksSortData('up', 'name'));\r\n    const sortNameHandlerDown = () => dispatch(setPacksSortData('down', 'name'));\r\n    const sortCardsCountHandlerUp = () => dispatch(setPacksSortData('up', \"cardsCount\"));\r\n    const sortCardsCountHandlerDown = () => dispatch(setPacksSortData('down', \"cardsCount\"));\r\n    const sortUpdatedHandlerUp = () => dispatch(setPacksSortData('up', \"updated\"));\r\n    const sortUpdatedHandlerDown = () => dispatch(setPacksSortData('down', \"updated\"));\r\n    const onChangePageCountHandler = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        dispatch(setPacksData({pageCount: Number(e.currentTarget.value)}));\r\n        dispatch(getPacks());\r\n    }\r\n    const refreshHandler = () => dispatch(getPacks());\r\n    const buttonStyle = `${commonStyles.button} ${isLoading && commonStyles.disabled}`;\r\n\r\n    const [packId, setPackId] = useState('');\r\n    const updatePackModalCallback = (name: string) => {\r\n        dispatch(updatePack(packId, name));\r\n        setShowUpdateModal(false);\r\n    }\r\n    const onClickUpdatePack = (packId: string) => {\r\n        setPackId(packId);\r\n        setShowUpdateModal(true);\r\n    }\r\n    const questionPackModalCallback = () => {\r\n        dispatch(deletePack(packId));\r\n        setShowQuestionModal(false);\r\n    }\r\n    const onClickDeletePack = (packId: string) => {\r\n        setPackId(packId);\r\n        setShowQuestionModal(true);\r\n    }\r\n    if (!isLoggedIn) {\r\n        return <Navigate to={'/login'}/>\r\n    }\r\n    const packsList = cardPacks.map(p => {\r\n        return (\r\n            <Pack key={p._id}\r\n                  id={p._id}\r\n                  name={p.name}\r\n                  cardsCount={p.cardsCount}\r\n                  updated={p.updated}\r\n                  authorId={p.user_id}\r\n                  deletePack={onClickDeletePack}\r\n                  updatePackHandler={onClickUpdatePack}/>\r\n        );\r\n    })\r\n\r\n\r\n    return (\r\n        <div className={commonStyles.wrapper}>\r\n            {showAddModal && <ItemModal type={\"add pack\"} callback={addPackModalCallback} setShow={setShowAddModal}/>}\r\n            {showUpdateModal && <ItemModal type={\"update pack\"} callback={updatePackModalCallback} setShow={setShowUpdateModal}/>}\r\n            {showQuestionModal && <QuestionModal callback={questionPackModalCallback} setShow={setShowQuestionModal}/>}\r\n            <section className={`${commonStyles.section} ${styles.section}`}>\r\n                <article className={`${commonStyles.article} ${styles.article}`}>\r\n                    <Paginator totalCount={cardPacksTotalCount}\r\n                               pageSize={pageCount}\r\n                               currentPage={page}\r\n                               onChangedPage={onChangedPage}/>\r\n                    {error && <ErrorModal text={error}/>}\r\n                    <Search searchFunction={searchHandler}/>\r\n                    <div className={styles.packNumberWrapper}>\r\n                        <span className={styles.labelSelectPageCounts}>Packs number</span>\r\n                        <select disabled={isLoading} className={`${commonStyles.button} ${styles.select}`}\r\n                                onChange={onChangePageCountHandler}>\r\n                            <option value={10}>10</option>\r\n                            <option value={20}>20</option>\r\n                            <option value={30}>30</option>\r\n                            <option value={40}>40</option>\r\n                            <option value={50}>50</option>\r\n                            <option value={1000}>😻</option>\r\n                        </select>\r\n                        <SuperButton disabled={isLoading}\r\n                                     onClick={refreshHandler}\r\n                                     className={`${buttonStyle} ${styles.refreshBtn}`}>\r\n                            Refresh page\r\n                        </SuperButton>\r\n                    </div>\r\n                    <table className={commonStyles.table} width={'100%'} cellPadding=\"2\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>\r\n                                <Sort sortHandlerUp={sortNameHandlerUp}\r\n                                      sortHandlerDown={sortNameHandlerDown}\r\n                                      title={'Name'}/>\r\n                            </th>\r\n                            <th>\r\n                                <Sort sortHandlerUp={sortCardsCountHandlerUp}\r\n                                      sortHandlerDown={sortCardsCountHandlerDown}\r\n                                      title={'Cards Count'}/>\r\n                            </th>\r\n                            <th>\r\n                                <Sort sortHandlerUp={sortUpdatedHandlerUp}\r\n                                      sortHandlerDown={sortUpdatedHandlerDown}\r\n                                      title={'Updated'}/>\r\n                            </th>\r\n                            <th>\r\n                                <div className={styles.myPacksButtonsWrapper}>\r\n                                    <label>\r\n                                        <input type={'checkbox'}\r\n                                               disabled={isLoading}\r\n                                               checked={user_id !== ''}\r\n                                               onChange={checkMyHandler}/>\r\n                                        My packs\r\n                                    </label>\r\n                                    <SuperButton\r\n                                        disabled={isLoading}\r\n                                        className={buttonStyle}\r\n                                        onClick={addPackHandler}>\r\n                                        Add pack\r\n                                    </SuperButton>\r\n                                </div>\r\n                            </th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {packsList}\r\n                        </tbody>\r\n                    </table>\r\n                    <Link to={'/login'}>\r\n                        <SuperButton className={`${commonStyles.button} ${styles.backBtn}`}>\r\n                            Back\r\n                        </SuperButton>\r\n                    </Link>\r\n                </article>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import {\r\n    AddCardRequestType,\r\n    api,\r\n    CardType,\r\n    GetCardsRequestType,\r\n    GetCardsResponseType,\r\n    UpdateCardRequestType\r\n} from \"../dal/api/api\";\r\nimport {AppStoreType, AppThunk} from \"./store\";\r\nimport {setAppLoading} from \"./appReducer\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState: InitialCardsStateType = {\r\n    cards: [],\r\n    cardsTotalCount: 0,\r\n    page: 1,\r\n    maxGrade: 0,\r\n    minGrade: 0,\r\n    packUserId: '',\r\n    pageCount: 10,\r\n    error: ''\r\n}\r\n\r\nexport const cardReducer = (state = initialState, action: CardActionTypes) => {\r\n    switch (action.type) {\r\n        case \"CARDS/SET-CARDS-DATA\":\r\n            return {...state, ...action.data}\r\n        case \"CARDS/SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setCardsData = (data: CardsDataType) => ({type: 'CARDS/SET-CARDS-DATA', data} as const)\r\nexport const setCardsError = (error: string) => ({type: 'CARDS/SET-ERROR', error} as const)\r\n\r\nexport const getCards = (data: GetCardsRequestType): AppThunk =>\r\n    async (dispatch, getState: () => AppStoreType) => {\r\n        dispatch(setAppLoading(true));\r\n        try {\r\n            const response = await api.getCards({\r\n                ...data,\r\n                page: getState().cardPage.page,\r\n                pageCount: getState().cardPage.pageCount,\r\n            });\r\n            dispatch(setCardsData(response.data));\r\n        } catch (error) {\r\n            if (axios.isAxiosError(error) && error.response) {\r\n                dispatch(setCardsError(error.response.data.error));\r\n            } else if (axios.isAxiosError(error)) {\r\n                dispatch(setCardsError(error.message));\r\n            }\r\n        } finally {\r\n            dispatch(setAppLoading(false));\r\n        }\r\n    }\r\nexport const addCard = (data: AddCardRequestType): AppThunk =>\r\n    async (dispatch) => {\r\n        dispatch(setAppLoading(true));\r\n        try {\r\n            await api.addCard(data);\r\n            dispatch(getCards({cardsPack_id: data.card.cardsPack_id}))\r\n        } catch (error) {\r\n            if (axios.isAxiosError(error) && error.response) {\r\n                dispatch(setCardsError(error.response.data.error));\r\n            } else if (axios.isAxiosError(error)) {\r\n                dispatch(setCardsError(error.message));\r\n            }\r\n        } finally {\r\n            dispatch(setAppLoading(false));\r\n        }\r\n    }\r\nexport const deleteCard = (data: { id: string }): AppThunk =>\r\n    async (dispatch, getState: () => AppStoreType) => {\r\n        dispatch(setAppLoading(true));\r\n        try {\r\n            await api.deleteCard(data);\r\n            dispatch(getCards({cardsPack_id: getState().cardPage.cards[0].cardsPack_id}))\r\n        } catch (error) {\r\n            if (axios.isAxiosError(error) && error.response) {\r\n                dispatch(setCardsError(error.response.data.error));\r\n            } else if (axios.isAxiosError(error)) {\r\n                dispatch(setCardsError(error.message));\r\n            }\r\n        } finally {\r\n            dispatch(setAppLoading(false));\r\n        }\r\n    }\r\nexport const updateCard = (data: UpdateCardRequestType): AppThunk =>\r\n    async (dispatch, getState: () => AppStoreType) => {\r\n        dispatch(setAppLoading(true));\r\n        try {\r\n            await api.updateCard(data);\r\n            dispatch(getCards({cardsPack_id: getState().cardPage.cards[0].cardsPack_id}))\r\n        } catch (error) {\r\n            if (axios.isAxiosError(error) && error.response) {\r\n                dispatch(setCardsError(error.response.data.error));\r\n            } else if (axios.isAxiosError(error)) {\r\n                dispatch(setCardsError(error.message));\r\n            }\r\n        } finally {\r\n            dispatch(setAppLoading(false));\r\n        }\r\n    }\r\n\r\nexport const addCardGrade = (data: { grade: number, card_id: string }): AppThunk =>\r\n    async (dispatch) => {\r\n        dispatch(setAppLoading(true));\r\n        try {\r\n            await api.gradeCard(data);\r\n        } catch (error) {\r\n            if (axios.isAxiosError(error) && error.response) {\r\n                dispatch(setCardsError(error.response.data.error));\r\n            } else if (axios.isAxiosError(error)) {\r\n                dispatch(setCardsError(error.message));\r\n            }\r\n        } finally {\r\n            dispatch(setAppLoading(false));\r\n        }\r\n    }\r\n\r\n//Types\r\ntype CardActionTypes = ReturnType<typeof setCardsData> | ReturnType<typeof setCardsError>\r\n\r\nexport type InitialCardsStateType = GetCardsResponseType & {\r\n    error: string\r\n}\r\n\r\ntype CardsDataType = {\r\n    cards?: CardType[]\r\n    cardsTotalCount?: number\r\n    maxGrade?: number\r\n    minGrade?: number\r\n    page?: number\r\n    pageCount?: number\r\n    packUserId?: string\r\n}","import React from \"react\";\r\nimport SuperButton from \"../../../../common/components/SuperButton/SuperButton\";\r\nimport commonStyles from \"../../../../common/styles/commonStyles.module.css\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../bll/store\";\r\n\r\ntype PropsType = {\r\n    id: string\r\n    question: string\r\n    answer: string\r\n    authorId: string\r\n    grade: number\r\n    updated: Date | null\r\n    deleteCardHandler: (id: string) => void\r\n    updateCardHandler: (id: string) => void\r\n}\r\n\r\nexport const Card = ({\r\n                         id,\r\n                         question,\r\n                         answer,\r\n                         authorId,\r\n                         grade,\r\n                         updated,\r\n                         deleteCardHandler,\r\n                         updateCardHandler\r\n                     }: PropsType) => {\r\n    const isLoading = useSelector<AppStoreType, boolean>(state => state.app.loading);\r\n    const userId = useSelector<AppStoreType, string>(state => state.profilePage._id);\r\n\r\n    return (\r\n        <tr>\r\n            <td>{question}</td>\r\n            <td>{answer}</td>\r\n            <td>{grade}</td>\r\n            <td>{updated}</td>\r\n            {userId === authorId &&\r\n                <td>\r\n                    <div>\r\n                        <SuperButton\r\n                            disabled={isLoading}\r\n                            className={`${commonStyles.button} ${isLoading && commonStyles.disabled}`}\r\n                            onClick={() => deleteCardHandler(id)}>\r\n                            Delete\r\n                        </SuperButton>\r\n                        <SuperButton\r\n                            disabled={isLoading}\r\n                            className={`${commonStyles.button} ${isLoading && commonStyles.disabled}`}\r\n                            onClick={() => updateCardHandler(id)}>\r\n                            Update\r\n                        </SuperButton>\r\n                    </div>\r\n                </td>\r\n            }\r\n        </tr>\r\n    );\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport styles from \"./Cards.module.css\";\r\nimport commonStyles from \"../../../common/styles/commonStyles.module.css\";\r\nimport {Link, Navigate, useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {\r\n    addCard,\r\n    deleteCard,\r\n    getCards,\r\n    InitialCardsStateType,\r\n    setCardsData,\r\n    setCardsError,\r\n    updateCard\r\n} from \"../../../bll/cardReducer\";\r\nimport {Paginator} from \"../../../common/components/Paginator/Paginator\";\r\nimport SuperButton from \"../../../common/components/SuperButton/SuperButton\";\r\nimport {Search} from \"../../../common/components/Search/Search\";\r\nimport {ItemModal} from \"../../../common/components/Modals/ItemModal/ItemModal\";\r\nimport {Card} from \"./Card/Card\";\r\nimport {QuestionModal} from \"../../../common/components/Modals/QuestionModal/QuestionModal\";\r\nimport {ErrorModal} from \"../../../common/components/Modals/ErrorModal/ErrorModal\";\r\n\r\n\r\nexport const Cards = () => {\r\n    const dispatch = useDispatch();\r\n    const {\r\n        cards,\r\n        cardsTotalCount,\r\n        page,\r\n        pageCount,\r\n        packUserId,\r\n        error,\r\n    } = useSelector<AppStoreType, InitialCardsStateType>(state => state.cardPage);\r\n    const userId = useSelector<AppStoreType, string>(state => state.profilePage._id);\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.loginPage.isLoggedIn);\r\n    const isLoading = useSelector<AppStoreType, boolean>(state => state.app.loading);\r\n    const params = useParams<'pack_id'>();\r\n\r\n    useEffect(() => {\r\n        dispatch(getCards({cardsPack_id: params.pack_id as string}));\r\n    }, [dispatch, params.pack_id])\r\n\r\n    const [showAddModal, setShowAddModal] = useState(false);\r\n    const [showUpdateModal, setShowUpdateModal] = useState(false);\r\n    const [showQuestionModal, setShowQuestionModal] = useState(false);\r\n\r\n    const addCardHandler = () => {\r\n        setShowAddModal(true);\r\n    }\r\n    const addCardModalCallback = (question: string, answer?: string) => {\r\n        dispatch(addCard({\r\n            card: {\r\n                question,\r\n                answer: answer ?? 'no answer',\r\n                cardsPack_id: params.pack_id ?? ''\r\n            }\r\n        }))\r\n        setShowAddModal(false);\r\n    }\r\n    const onChangedPage = (currentPage: number) => {\r\n        dispatch(setCardsData({page: currentPage}));\r\n        dispatch(getCards({cardsPack_id: params.pack_id as string}));\r\n    }\r\n    const searchHandler = (title: string) => {\r\n        dispatch(getCards({\r\n            cardsPack_id: params.pack_id as string,\r\n            cardQuestion: title\r\n        }))\r\n    }\r\n\r\n    const [cardId, setCardId] = useState('');\r\n    const questionCardModalCallback = () => {\r\n        dispatch(deleteCard({id: cardId}));\r\n        setShowQuestionModal(false);\r\n    }\r\n    const onClickDeletePack = (packId: string) => {\r\n        setCardId(packId);\r\n        setShowQuestionModal(true);\r\n    }\r\n    const updateCardModalCallback = (question: string, answer?: string) => {\r\n        dispatch(updateCard({\r\n            card: {\r\n                _id: cardId,\r\n                question,\r\n                answer,\r\n            }\r\n        }));\r\n    }\r\n    const onClickUpdatePack = (cardId: string) => {\r\n        setCardId(cardId);\r\n        setShowUpdateModal(true);\r\n    }\r\n\r\n    const cardList = cards.map(c => {\r\n        return <Card key={c._id}\r\n                     id={c._id}\r\n                     updateCardHandler={onClickUpdatePack}\r\n                     deleteCardHandler={onClickDeletePack}\r\n                     updated={c.updated}\r\n                     authorId={c.user_id}\r\n                     question={c.question}\r\n                     answer={c.answer}\r\n                     grade={c.grade}\r\n        />\r\n    })\r\n\r\n    if (!isLoggedIn) {\r\n        return <Navigate to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={commonStyles.wrapper}>\r\n            {showAddModal && <ItemModal type={\"add card\"}\r\n                                        callback={addCardModalCallback}\r\n                                        setShow={setShowAddModal}/>}\r\n            {showUpdateModal && <ItemModal type={\"update card\"}\r\n                                           cardId={cardId}\r\n                                           callback={updateCardModalCallback}\r\n                                           setShow={setShowUpdateModal}/>}\r\n            {showQuestionModal && <QuestionModal callback={questionCardModalCallback} setShow={setShowQuestionModal}/>}\r\n            <section className={`${commonStyles.section} ${styles.section}`}>\r\n                <article className={`${commonStyles.article} ${styles.article}`}>\r\n                    <Paginator totalCount={cardsTotalCount}\r\n                               pageSize={pageCount}\r\n                               currentPage={page}\r\n                               onChangedPage={onChangedPage}/>\r\n                    {error && <ErrorModal text={error}/>}\r\n                    <Search searchFunction={searchHandler}/>\r\n                    <table className={commonStyles.table} width={'100%'} cellPadding=\"2\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Question</th>\r\n                            <th>Answer</th>\r\n                            <th>Grade</th>\r\n                            <th>Updated</th>\r\n                            {userId === packUserId &&\r\n                                <th>\r\n                                    <SuperButton\r\n                                        className={`${commonStyles.button} ${isLoading && commonStyles.disabled}`}\r\n                                        onClick={addCardHandler}\r\n                                        disabled={userId !== packUserId}>\r\n                                        Add card\r\n                                    </SuperButton>\r\n                                </th>\r\n                            }\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>{cardList}</tbody>\r\n                    </table>\r\n                    <Link to={'/packs'}>\r\n                        <SuperButton className={`${commonStyles.button} ${styles.backBtn}`}>\r\n                            Back\r\n                        </SuperButton>\r\n                    </Link>\r\n                </article>\r\n            </section>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {useEffect, useState} from \"react\";\r\nimport styles from './UpModal.module.css';\r\n\r\ntype ModalUpType = {\r\n    speed?: number\r\n}\r\n\r\nexport const UpModal: React.FC<ModalUpType> = ({speed = 1}) => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleScroll = () => {\r\n        if (window.scrollY > 300) setShow(true);\r\n        else setShow(false);\r\n    };\r\n\r\n    const scroll = () => {\r\n        const step = window.scrollY / speed;\r\n        let lastState = window.scrollY;\r\n\r\n        const innerTimer = setInterval(() => {\r\n            if (lastState < window.scrollY) clearInterval(innerTimer);\r\n            lastState = window.scrollY;\r\n\r\n            window.scroll(0, lastState - step);\r\n            if (window.scrollY === 0) clearInterval(innerTimer);\r\n        }, 50);\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll);\r\n    }, []);\r\n\r\n    if (show) {\r\n        return (\r\n            <div className={styles.upBlock} onClick={scroll}>\r\n                <span className={styles.text}>&#8593;</span>\r\n                <span className={styles.text}>UP</span>\r\n            </div>\r\n        );\r\n    } else return null\r\n};","import React, {useEffect, useState} from \"react\";\r\nimport {CardType} from \"../../../dal/api/api\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport SuperButton from \"../../../common/components/SuperButton/SuperButton\";\r\nimport commonStyles from '../../../common/styles/commonStyles.module.css';\r\nimport styles from './LearnCards.module.css';\r\nimport {addCardGrade, getCards} from \"../../../bll/cardReducer\";\r\nimport {ErrorModal} from \"../../../common/components/Modals/ErrorModal/ErrorModal\";\r\n\r\nconst selectCard = (cards: CardType[]) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n        const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n        return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n    }, {sum: 0, id: -1});\r\n    return cards[res.id + 1];\r\n}\r\n\r\nexport const LearnCards = () => {\r\n    const gradeButtons: Array<string> = [\"Don't know\", \"Forgot\", \"Thought\", \"Know\", \"Excellent\"];\r\n    const dispatch = useDispatch();\r\n    const cards = useSelector<AppStoreType, CardType[]>(state => state.cardPage.cards);\r\n    const error = useSelector<AppStoreType, string>(state => state.cardPage.error);\r\n    const [checked, setChecked] = useState(false);\r\n    const [firstRender, setFirstRender] = useState(true);\r\n    const [card, setCard] = useState<CardType>({\r\n        cardsPack_id: \"\",\r\n        answer: \"\",\r\n        question: \"\",\r\n        grade: 0,\r\n        shots: 0,\r\n        rating: 0,\r\n        type: \"\",\r\n        user_id: \"\",\r\n        created: null,\r\n        updated: null,\r\n        _id: \"\",\r\n    });\r\n\r\n    const {pack_id} = useParams();\r\n\r\n    useEffect(() => {\r\n        if (firstRender) {\r\n            dispatch(getCards({cardsPack_id: pack_id as string}));\r\n            setFirstRender(false);\r\n        }\r\n        if (cards.length > 0) {\r\n            setCard(selectCard(cards));\r\n        }\r\n    }, [dispatch, pack_id, cards, firstRender]);\r\n\r\n\r\n    const sendGrade = (grade: number) => {\r\n        dispatch(addCardGrade({grade, card_id: card._id as string}))\r\n    }\r\n\r\n    const gradeList = gradeButtons.map((grade) => {\r\n        const onClickGrade = () => {\r\n            sendGrade(gradeButtons.indexOf(grade) + 1);\r\n            setChecked(false);\r\n            setCard(selectCard(cards));\r\n        }\r\n\r\n        return (\r\n            <SuperButton key={grade}\r\n                         className={commonStyles.button}\r\n                         onClick={onClickGrade}>\r\n                {grade}\r\n            </SuperButton>\r\n        );\r\n    })\r\n\r\n    const onClickCheckHandler = () => setChecked(true);\r\n\r\n    return (\r\n        <article className={`${commonStyles.article} ${styles.wrapper}`}>\r\n            <div>{error && <ErrorModal text={error}/>}</div>\r\n            <div className={styles.question}>\r\n                <h2>Question</h2>\r\n                <div>{card.question}</div>\r\n            </div>\r\n            {\r\n                checked &&\r\n                <div className={styles.answerBlockWrapper}>\r\n                    <div className={styles.answer}>\r\n                        <h2>Answer</h2>\r\n                        <div className={styles.answerText}>{card.answer}</div>\r\n                    </div>\r\n                    <div className={styles.answerBtn}>{gradeList}</div>\r\n                </div>\r\n            }\r\n\r\n            <div className={styles.btnWrapper}>\r\n                <Link to={'/packs'}>\r\n                    <SuperButton className={`${commonStyles.button} ${styles.backBtn}`}>Back</SuperButton>\r\n                </Link>\r\n                {\r\n                    !checked &&\r\n                    <SuperButton className={commonStyles.button} onClick={onClickCheckHandler}>\r\n                        Check\r\n                    </SuperButton>\r\n                }\r\n            </div>\r\n        </article>\r\n    );\r\n}","import React, {useEffect} from 'react';\r\nimport {Navigate, Route, Routes} from 'react-router-dom';\r\nimport './App.css';\r\nimport Error404 from \"../pages/404/Error404\";\r\nimport {Login} from \"../pages/Login/Login\";\r\nimport {Registration} from \"../pages/Register/Registration\";\r\nimport {NewPass} from \"../pages/NewPass/NewPass\";\r\nimport {PassRecover} from \"../pages/PassRecover/PassRecover\";\r\nimport {Profile} from \"../pages/Profile/Profile\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../bll/store\";\r\nimport {LoadingLine} from \"../../common/components/LoadingLine/LoadingLine\";\r\nimport {CheckEmail} from \"../pages/CheckEmail/CheckEmail\";\r\nimport {initialize} from \"../../bll/appReducer\";\r\nimport {Packs} from \"../pages/Packs/Packs\";\r\nimport {Cards} from \"../pages/Cards/Cards\";\r\nimport {UpModal} from \"../../common/components/Modals/UpModal/UpModal\";\r\nimport {LearnCards} from \"../pages/LearnCards/LearnCards\";\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch();\r\n    const loading = useSelector<AppStoreType, boolean>((state) => state.app.loading);\r\n    const initialized = useSelector<AppStoreType, boolean>((state) => state.app.initialized);\r\n\r\n    useEffect(() => {\r\n        dispatch(initialize());\r\n    }, [dispatch])\r\n\r\n    if (!initialized) {\r\n        return <LoadingLine/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"App\">\r\n                {loading && <LoadingLine/>}\r\n                <UpModal/>\r\n                <Routes>\r\n                    <Route path={'/'} element={<Login/>}/>\r\n                    <Route path={'login'} element={<Login/>}/>\r\n                    <Route path={'profile'} element={<Profile/>}/>\r\n                    <Route path={'registration'} element={<Registration/>}/>\r\n                    <Route path={'check-email'} element={<CheckEmail/>}/>\r\n                    <Route path={'set-new-password/:token'} element={<NewPass/>}/>\r\n                    <Route path={'cards/:pack_id'} element={<Cards/>}/>\r\n                    <Route path={'packs'} element={<Packs/>}/>\r\n                    <Route path={'pass_recovery'} element={<PassRecover/>}/>\r\n                    <Route path={'learn/:pack_id'} element={<LearnCards/>}/>\r\n                    <Route path={'404'} element={<Error404/>}/>\r\n                    <Route path={'*'} element={<Navigate to={'404'}/>}/>\r\n                </Routes>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {AnyAction, applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {loginReducer} from \"./loginReducer\";\r\nimport {newPassReducer} from \"./newPassReducer\";\r\nimport {recoverPassReducer} from \"./passRecoverReducer\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {registerReducer} from \"./registerReducer\";\r\nimport {appReducer} from \"./appReducer\";\r\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk'\r\nimport {packReducer} from \"./packReducer\";\r\nimport {cardReducer} from \"./cardReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    loginPage: loginReducer,\r\n    newPassPage: newPassReducer,\r\n    recoverPassPage: recoverPassReducer,\r\n    profilePage: profileReducer,\r\n    registerPage: registerReducer,\r\n    packPage: packReducer,\r\n    cardPage: cardReducer,\r\n})\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\nexport type AppStoreType = ReturnType<typeof rootReducer>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppStoreType, unknown, AnyAction>\r\n\r\n//@ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './ui/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./bll/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App/>\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}