{"version":3,"sources":["ui/pages/Login/Login.module.css","ui/pages/404/Error404.module.css","ui/pages/Profile/Profile.module.css","common/components/SuperInputText/SuperInputText.module.css","common/styles/commonStyles.module.css","common/components/SuperButton/SuperButton.module.css","common/components/SuperCheckbox/SuperCheckbox.module.css","common/components/LoadingLine/LoadingLine.module.css","ui/pages/Register/Register.module.css","ui/pages/NewPass/NewPass.module.css","ui/pages/PassRecover/PassRecover.module.css","ui/pages/CheckEmail/CheckMail.module.css","ui/pages/404/404.png","ui/pages/404/Error404.tsx","common/components/SuperButton/SuperButton.tsx","common/components/SuperInputText/SuperInputText.tsx","common/components/SuperCheckbox/SuperCheckbox.tsx","dal/api/api.ts","common/mail/Mail.ts","bll/profileReducer.ts","bll/appReducer.ts","bll/loginReducer.ts","ui/pages/Login/Login.tsx","bll/registerReducer.ts","ui/pages/Register/Registration.tsx","bll/newPassReducer.ts","ui/pages/NewPass/NewPass.tsx","bll/passRecoverReducer.ts","ui/pages/PassRecover/PassRecover.tsx","common/images/noAvatar.png","ui/pages/Profile/Profile.tsx","common/components/LoadingLine/LoadingLine.tsx","common/images/checkMail.png","ui/pages/CheckEmail/CheckEmail.tsx","ui/App/App.tsx","reportWebVitals.ts","bll/store.ts","index.tsx"],"names":["module","exports","Error404","className","commonStyles","wrapper","section","s","join","error","image","src","alt","width","text","to","home","SuperButton","red","restProps","finalClassName","default","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","spanClassName","finalSpanClassName","finalInputClassName","input","errorInput","superInput","e","currentTarget","value","key","placeholder","SuperCheckbox","onChangeChecked","labelClassName","children","checkbox","finalLabelClassName","label","checked","instance","axios","create","baseURL","withCredentials","api","data","post","delete","put","passRecoverMail","email","from","message","newPassword","token","password","resetPasswordToken","initialState","_id","name","avatar","publicCardPacksCount","isAdmin","verified","rememberMe","created","updated","setProfileData","updateProfileData","setProfileError","updateProfile","dispatch","a","setAppLoading","response","updatedUser","isAxiosError","loading","initialized","isLoggedIn","setLoginError","setLoggedIn","Login","useDispatch","useSelector","state","loginPage","useState","setEmail","setPassword","setRememberMe","emailError","setEmailError","passwordError","setPasswordError","submitHandler","test","length","article","form","styles","errorEmail","errorPassword","checkboxRemember","remember","onClick","button","reset","errorRegister","isRegistered","setRegisterError","Registration","registerPage","passwordCheck","setPasswordCheck","onSubmit","statusText","isEmailValid","isPassValid","passwordRegExp","btnWrapper","setNewPassword","errorResponse","NewPass","status","app","setNewPassState","newPassPage","useParams","confirmPassword","setConfirmPassword","info","createNewPassword","event","disabled","mailSent","PassRecover","recoverPassState","recoverPassPage","recoverPassMail","setRecoverPassMail","Profile","profileName","profilePage","profileAvatar","profileEmail","setName","setAvatar","noAvatar","LoadingLine","loadingLine","line","shadow","CheckEmail","checkMail","App","useEffect","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.494b95c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"remember\":\"Login_remember__b-MMo\",\"checkbox\":\"Login_checkbox__3uCiw\",\"checkboxRemember\":\"Login_checkboxRemember__Z5-9S\",\"button\":\"Login_button__1D3Lk\",\"reset\":\"Login_reset__3qKuQ\",\"errorEmail\":\"Login_errorEmail__2Reup\",\"errorPassword\":\"Login_errorPassword__PQ1RT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Error404_section__16GgK\",\"error\":\"Error404_error__2qreX\",\"home\":\"Error404_home__2IoEE\",\"text\":\"Error404_text__2Xe4f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Profile_error__BPh_U\",\"avatar\":\"Profile_avatar__okiib\",\"info\":\"Profile_info__BE9gG\",\"btnWrapper\":\"Profile_btnWrapper__1jCN7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__1N21f\",\"errorInput\":\"SuperInputText_errorInput__2Aa0j\",\"error\":\"SuperInputText_error__3crER\",\"superInput\":\"SuperInputText_superInput__20qqK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"commonStyles_wrapper__3ZWyx\",\"section\":\"commonStyles_section__3qJ5j\",\"article\":\"commonStyles_article__3mEMT\",\"form\":\"commonStyles_form__Axs3w\",\"input\":\"commonStyles_input__1CBtn\",\"button\":\"commonStyles_button__1L9l9\",\"error\":\"commonStyles_error__2lFaq\",\"disabled\":\"commonStyles_disabled__24hNF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2rk-j\",\"red\":\"SuperButton_red__2T61F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__2qv2l\",\"spanClassName\":\"SuperCheckbox_spanClassName__XqaW5\",\"checkbox\":\"SuperCheckbox_checkbox__2_Goo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingLine\":\"LoadingLine_loadingLine__Jh-1D\",\"line\":\"LoadingLine_line__G1XBD\",\"loading\":\"LoadingLine_loading__GJ-Mb\",\"shadow\":\"LoadingLine_shadow__2TZ_w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Register_error__xyJ6M\",\"btnWrapper\":\"Register_btnWrapper__3Bog7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"NewPass_button__3vBlI\",\"error\":\"NewPass_error__1U76E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"PassRecover_button__n2Xpf\",\"disabled\":\"PassRecover_disabled__3c3pV\",\"error\":\"PassRecover_error__3V4V4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"CheckMail_message__vNccq\",\"image\":\"CheckMail_image__1ZFji\"};","export default __webpack_public_path__ + \"static/media/404.9494ad47.png\";","import React from 'react'\r\nimport commonStyles from \"../../../common/styles/commonStyles.module.css\";\r\nimport s from './Error404.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport error from './404.png';\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={commonStyles.wrapper}>\r\n          <div className={[commonStyles.section, s.section].join(' ')}>\r\n            <div className={s.error}>\r\n              <span>4</span>\r\n              <img className={s.image} src={error} alt=\"404\" width={'200px'}/>\r\n              <span>4</span>\r\n            </div>\r\n            <p className={s.text}>\r\n              The page you are looking <span>NOT FOUND!</span> So sad...\r\n            </p>\r\n            <NavLink to={'/'} className={s.home}>Return Home</NavLink>\r\n          </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = className ? className : `${red ? `${s.red} ${s.default}` : s.default} ${className}`\r\n    //${s.button} ${red ? s.red : s.default} ${className}\r\n\r\n    return (\r\n            <button\r\n                className={finalClassName}\r\n                {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n            />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = spanClassName ? spanClassName : `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    // const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}`\r\n    const finalInputClassName = className ? className : `${s.input} ${error ? s.errorInput : s.superInput} ${className}`\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                placeholder={'Type some text'}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n\r\n            {error && <div className={finalSpanClassName}>{error}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n    labelClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName, labelClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${className ? className : s.checkbox}`\r\n    const finalSpanClassName = `${spanClassName ? spanClassName : s.spanClassName}`\r\n    const finalLabelClassName = `${labelClassName ? labelClassName : s.label}`\r\n\r\n    return (\r\n        <label className={finalLabelClassName}>\r\n            <input type={'checkbox'}\r\n                   onChange={onChangeCallback}\r\n                   className={finalInputClassName}\r\n\r\n                   {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={finalSpanClassName}>{children}</span>}\r\n            {/*благодаря label нажатие на спан передастся в инпут*/}\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import axios, {AxiosResponse} from \"axios\";\r\nimport {Mail} from \"../../common/mail/Mail\";\r\n\r\nconst instance = axios.create({\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true,\r\n})\r\n\r\nexport const api = {\r\n    login(data: LoginRequestType) {\r\n        return instance.post<LoginRequestType,\r\n            AxiosResponse<LoginResponseType>>(`auth/login`, data)\r\n    },\r\n    register(data: RegisterRequestType) {\r\n        return instance.post<RegisterRequestType,\r\n            AxiosResponse<RegisterResponseType>>(`auth/register`, data)\r\n    },\r\n    mePost(data: MePostRequestType) {\r\n        return instance.post<MePostRequestType,\r\n            AxiosResponse<MePostResponseType>>(`auth/me`, data)\r\n    },\r\n    mePut(data: MePutRequestType) {\r\n        return instance.put<MePutRequestType,\r\n            AxiosResponse<MePutResponseType>>(`auth/me`, data)\r\n    },\r\n    meDelete(data: MeDeleteRequestType) {\r\n        return instance.delete<MeDeleteRequestType,\r\n            AxiosResponse<MeDeleteResponseType>>(`auth/me`, data)\r\n    },\r\n    meUpdate(data: MeUpdateRequestType) {\r\n        return instance.put<MeUpdateRequestType,\r\n            AxiosResponse<MeUpdateResponseType>>(`auth/me`, data)\r\n    },\r\n    forgotPassword(passRecoverMail: string) {\r\n        return instance.post<ForgotRequestType,\r\n            AxiosResponse<ForgotResponseType>>(`auth/forgot`, {\r\n            email: passRecoverMail,\r\n            from: \"Cards <best@yandex.by>\",\r\n            message: Mail(),\r\n        })\r\n    },\r\n    setNewPassword(newPassword: string, token: string) {\r\n        return instance.post<SetNewPasswordRequestType,\r\n            AxiosResponse<SetNewPasswordResponseType>>\r\n        (`auth/set-new-password`, {\r\n            password: newPassword,\r\n            resetPasswordToken: token,\r\n        })\r\n    },\r\n}\r\n\r\nexport type LoginRequestType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\nexport type MeUpdateResponseType = {\r\n    updatedUser: LoginResponseType\r\n}\r\nexport type LoginResponseType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number;\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean;\r\n    rememberMe: boolean;\r\n    error?: string;\r\n}\r\nexport type MeUpdateRequestType = {\r\n    name?: string\r\n    avatar?: string\r\n}\r\nexport type RegisterRequestType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type RegisterResponseType = {\r\n    addedUser: {}\r\n    error?: string;\r\n}\r\nexport type MePostRequestType = {}\r\nexport type MePostResponseType = LoginResponseType\r\nexport type MePutRequestType = {\r\n    name: string\r\n    avatar: string\r\n}\r\nexport type MePutResponseType = {\r\n    updatedUser: LoginResponseType\r\n    error?: string\r\n}\r\nexport type MeDeleteRequestType = {}\r\nexport type MeDeleteResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\nexport type ForgotRequestType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n}\r\nexport type ForgotResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\nexport type SetNewPasswordRequestType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\nexport type SetNewPasswordResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\n","export const Mail = () => {\r\n    const styles = 'color: green'\r\n    //http://localhost:3000/#/set-new-password/$token$\r\n    \r\n    return `<div style=\"${styles}\">Password recovery link: <a href=\"https://grindezer.github.io/card-project/#/set-new-password/$token$\">\r\n                                                    Click on this link to create a new password\r\n                                                    </a></div>`\r\n}","import {api, LoginResponseType, MeUpdateRequestType} from \"../dal/api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport axios from \"axios\";\r\nimport {setAppLoading} from \"./appReducer\";\r\n\r\nconst initialState: ProfileInitialStateType = {\r\n    _id: '',\r\n    email: '',\r\n    name: '',\r\n    avatar: '',\r\n    publicCardPacksCount: 0,\r\n    isAdmin: false,\r\n    verified: false,\r\n    rememberMe: false,\r\n    error: '',\r\n    token: '',\r\n    created: null,\r\n    updated: null,\r\n}\r\nexport const profileReducer = (state = initialState, action: ProfileActionsType): ProfileInitialStateType => {\r\n    switch (action.type) {\r\n        case \"PROFILE/SET-PROFILE-DATA\":\r\n            return {...state, ...action.data}\r\n        case \"PROFILE/UPDATE-PROFILE-DATA\":\r\n            return {...state, name: action.data.name, avatar: action.data.avatar}\r\n        case \"PROFILE/SET-PROFILE-ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"PROFILE/SET-PROFILE-DELETE-DATA\":\r\n            return {\r\n                _id: '',\r\n                email: '',\r\n                name: '',\r\n                avatar: '',\r\n                publicCardPacksCount: 0,\r\n                isAdmin: false,\r\n                verified: false,\r\n                rememberMe: false,\r\n                error: '',\r\n                token: '',\r\n                created: null,\r\n                updated: null,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setProfileData = (data: ProfileInitialStateType) => {\r\n    return {type: 'PROFILE/SET-PROFILE-DATA', data} as const\r\n}\r\nexport const updateProfileData = (data: LoginResponseType) => {\r\n    return {type: 'PROFILE/UPDATE-PROFILE-DATA', data} as const\r\n}\r\nexport const setProfileError = (error: string) => {\r\n    return {type: 'PROFILE/SET-PROFILE-ERROR', error} as const\r\n}\r\nexport const setProfileDeleteData = () => {\r\n    return {type: 'PROFILE/SET-PROFILE-DELETE-DATA'} as const\r\n}\r\n\r\n\r\nexport const updateProfile = (data: MeUpdateRequestType) => async (dispatch: Dispatch) => {\r\n    dispatch(setAppLoading(true));\r\n    try {\r\n        const response = await api.meUpdate(data);\r\n        dispatch(updateProfileData(response.data.updatedUser));\r\n    } catch (error) {\r\n        if (axios.isAxiosError(error) && error.response) {\r\n            dispatch(setProfileError(error.response.data.error));\r\n        }\r\n    } finally {\r\n        dispatch(setAppLoading(false));\r\n    }\r\n}\r\n\r\n\r\nexport type ProfileActionsType =\r\n    ReturnType<typeof setProfileData>\r\n    | ReturnType<typeof updateProfileData>\r\n    | ReturnType<typeof setProfileError>\r\n    | ReturnType<typeof setProfileDeleteData>\r\n\r\n\r\nexport type ProfileInitialStateType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    token?: string\r\n    created: Date | null\r\n    updated: Date | null\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error?: string\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {api} from \"../dal/api/api\";\r\nimport {setProfileData} from \"./profileReducer\";\r\nimport {setLoggedIn} from \"./loginReducer\";\r\n\r\nconst initialState: InitialStateType = {\r\n    loading: false,\r\n    initialized: false,\r\n    error: null,\r\n}\r\n\r\nexport const appReducer = (state = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"APP/SET_LOADING_STATUS\":\r\n            return {...state, loading: action.value}\r\n        case \"APP/SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"APP/SET-INITIALIZE\":\r\n            return {...state, initialized: true}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAppLoading = (value: boolean) => ({type: 'APP/SET_LOADING_STATUS', value} as const)\r\nexport const setAppError = (error: string | null) => ({type: 'APP/SET-ERROR', error} as const)\r\nexport const setAppInitialize = () => ({type: 'APP/SET-INITIALIZE'} as const)\r\n\r\nexport const initialize = () => async (dispatch: Dispatch) => {\r\n    dispatch(setAppLoading(true));\r\n    try {\r\n        const response = await api.mePost({})\r\n        dispatch(setProfileData(response.data));\r\n        dispatch(setLoggedIn(true));\r\n    } catch {\r\n        dispatch(setLoggedIn(false));\r\n    } finally {\r\n        dispatch(setAppInitialize());\r\n        dispatch(setAppLoading(false));\r\n    }\r\n}\r\n\r\ntype AppActionsType = ReturnType<typeof setAppLoading>\r\n    | ReturnType<typeof setAppError>\r\n    | ReturnType<typeof setAppInitialize>\r\n\r\ntype InitialStateType = {\r\n    loading: boolean,\r\n    initialized: boolean,\r\n    error: null | string,\r\n}","import {api, LoginRequestType} from \"../dal/api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport axios from \"axios\";\r\nimport {setAppLoading} from \"./appReducer\";\r\nimport {setProfileData, setProfileDeleteData, setProfileError} from \"./profileReducer\";\r\n\r\nconst initialState: InitialStateType = {\r\n    isLoggedIn: false,\r\n    rememberMe: false,\r\n    error: '',\r\n}\r\n\r\nexport const loginReducer = (state = initialState, action: LoginActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"LOGIN/SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"LOGIN/SET-LOGGED-IN\":\r\n            return {...state, isLoggedIn: action.value}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setLoginError = (error: string) => ({type: 'LOGIN/SET-ERROR', error} as const)\r\nexport const setLoggedIn = (value: boolean) => ({type: 'LOGIN/SET-LOGGED-IN', value} as const)\r\n\r\nexport const logIn = (data: LoginRequestType) => async (dispatch: Dispatch) => {\r\n    dispatch(setAppLoading(true));\r\n    try {\r\n        const response = await api.login(data);\r\n        dispatch(setLoggedIn(true));\r\n        dispatch(setProfileData(response.data)); // Инфа для профиля\r\n    } catch (error) {\r\n        if (axios.isAxiosError(error) && error.response) {\r\n            dispatch(setLoginError(error.response.data.error));\r\n        } else {\r\n            dispatch(setLoginError('Unknown error. Try again later'))\r\n        }\r\n    } finally {\r\n        dispatch(setAppLoading(false));\r\n    }\r\n}\r\n\r\nexport const logOut = () => async (dispatch: Dispatch) => {\r\n    dispatch(setAppLoading(true));\r\n    try {\r\n        await api.meDelete({})\r\n        dispatch(setProfileDeleteData());\r\n        dispatch(setLoggedIn(false));\r\n    } catch (error) {\r\n        if (axios.isAxiosError(error) && error.response) {\r\n            dispatch(setProfileError(error.response.data.error));\r\n        }\r\n    } finally {\r\n        dispatch(setAppLoading(false));\r\n    }\r\n}\r\n\r\ntype LoginActionsType = ReturnType<typeof setLoginError> | ReturnType<typeof setLoggedIn>\r\n\r\ntype InitialStateType = {\r\n    isLoggedIn: boolean\r\n    rememberMe: boolean\r\n    error: string\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport SuperButton from \"../../../common/components/SuperButton/SuperButton\";\r\nimport SuperInputText from \"../../../common/components/SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../../../common/components/SuperCheckbox/SuperCheckbox\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {logIn, setLoginError} from \"../../../bll/loginReducer\";\r\nimport {Link, Navigate} from \"react-router-dom\";\r\nimport commonStyles from \"../../../common/styles/commonStyles.module.css\";\r\nimport styles from './Login.module.css';\r\n\r\n\r\nexport const Login = () => {\r\n    const dispatch = useDispatch();\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.loginPage.isLoggedIn);\r\n    const error = useSelector<AppStoreType, string>(state => state.loginPage.error);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [rememberMe, setRememberMe] = useState(false);\r\n    const [emailError, setEmailError] = useState('')\r\n    const [passwordError, setPasswordError] = useState('')\r\n\r\n    const submitHandler = () => {\r\n        if (!email) {\r\n            setEmailError('Email is required!');\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n            setEmailError('Invalid email address');\r\n        } else if (!password) {\r\n            setPasswordError('Password is required!')\r\n        } else if (password.length <= 7) {\r\n            setPasswordError('Invalid password');\r\n        } else {\r\n            dispatch(logIn({email, password, rememberMe}));\r\n            dispatch(setLoginError(''));\r\n            setEmailError('');\r\n            setPasswordError('');\r\n        }\r\n    }\r\n\r\n    const onChangeEmailHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value);\r\n        setEmailError('');\r\n    }\r\n    const onChangePasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value);\r\n        setPasswordError('');\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n        return <Navigate to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={commonStyles.wrapper}>\r\n            <section className={commonStyles.section}>\r\n                <article className={commonStyles.article}>\r\n                    <h3>Login to Web App</h3>\r\n                    <div className={commonStyles.form}>\r\n                        <div>\r\n                            <SuperInputText onEnter={submitHandler}\r\n                                            className={commonStyles.input}\r\n                                            spanClassName={`${commonStyles.error} ${styles.errorEmail}`}\r\n                                            error={emailError}\r\n                                            onChange={onChangeEmailHandler}\r\n                                            type=\"text\"\r\n                                            placeholder=\"Email\"/>\r\n                        </div>\r\n                        <div>\r\n                            <SuperInputText onEnter={submitHandler}\r\n                                            className={commonStyles.input}\r\n                                            spanClassName={`${commonStyles.error} ${styles.errorPassword}`}\r\n                                            error={passwordError || error}\r\n                                            onChange={onChangePasswordHandler}\r\n                                            type=\"password\"\r\n                                            placeholder=\"Password\"/>\r\n                        </div>\r\n                        <div className={styles.checkboxRemember}>\r\n                            <SuperCheckbox className={styles.checkbox}\r\n                                           spanClassName={styles.remember}\r\n                                           onChangeChecked={setRememberMe}>\r\n                                Remember me on this computer\r\n                            </SuperCheckbox>\r\n                        </div>\r\n                        <SuperButton\r\n                            onClick={submitHandler}\r\n                            className={`${commonStyles.button} ${styles.button}`}>\r\n                            Log in\r\n                        </SuperButton>\r\n                    </div>\r\n                </article>\r\n                <div className={styles.reset}>\r\n                    Forgot your password? <Link to={`/pass_recovery`}>Click here</Link> to reset it or you can\r\n                    register <Link to={'/registration'}>here.</Link>\r\n                </div>\r\n            </section>\r\n        </div>\r\n\r\n    );\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {api} from \"../dal/api/api\";\r\nimport axios from \"axios\";\r\nimport {setAppLoading} from \"./appReducer\";\r\n\r\nconst initialState: InitialStateType = {\r\n    errorRegister: null,\r\n    isRegistered: false\r\n}\r\nexport const registerReducer = (state = initialState, action: RegisterActionsType) => {\r\n    switch (action.type) {\r\n        case \"REGISTER/SET_REGISTER\":\r\n            return {...state, isRegistered: action.value}\r\n        case \"REGISTER/SET_ERROR\":\r\n            return {...state, errorRegister: action.errorRegister}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst setRegister = (value: boolean) =>\r\n    ({type: 'REGISTER/SET_REGISTER', value} as const)\r\n\r\nexport const setRegisterError = (errorRegister: any) =>\r\n    ({type: 'REGISTER/SET_ERROR', errorRegister} as const)\r\n\r\nexport const register = (data: RegisterDataType) => async (dispatch: Dispatch) => {\r\n    dispatch(setAppLoading(true))\r\n    try {\r\n        const response = await api.register(data)\r\n        if (response.statusText === 'Created') {\r\n            dispatch(setRegister(true))\r\n        }\r\n    } catch (error) {\r\n        if (axios.isAxiosError(error) && error.response) {\r\n            if (error.response.data.isEmailValid && !error.response.data.isPassValid) {\r\n                dispatch(setRegisterError(error.response.data.passwordRegExp))\r\n            } else {\r\n                dispatch(setRegisterError(error.response.data.error))\r\n            }\r\n        }\r\n    } finally {\r\n        dispatch(setAppLoading(false))\r\n    }\r\n}\r\n\r\ntype SetRegisterAction = ReturnType<typeof setRegister>\r\ntype SetErrorAction = ReturnType<typeof setRegisterError>\r\ntype RegisterActionsType = SetRegisterAction | SetErrorAction\r\nexport type RegisterDataType = {\r\n    email: string\r\n    password: string\r\n}\r\ntype InitialStateType = { errorRegister: string | null, isRegistered: boolean }\r\n","import React, {useState} from \"react\";\r\nimport SuperInputText from \"../../../common/components/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../common/components/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {register, setRegisterError} from \"../../../bll/registerReducer\";\r\nimport commonStyles from \"../../../common/styles/commonStyles.module.css\";\r\nimport styles from \"./Register.module.css\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {Link, Navigate} from \"react-router-dom\";\r\n\r\nexport const Registration = () => {\r\n    const dispatch = useDispatch();\r\n    const isRegistered = useSelector<AppStoreType, boolean>(state => state.registerPage.isRegistered);\r\n    const error = useSelector<AppStoreType, string>(state => state.registerPage.errorRegister);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passwordCheck, setPasswordCheck] = useState('');\r\n\r\n    const onSubmit = () => {\r\n        if (!email || !password) {\r\n            dispatch(setRegisterError('Email and password is required!'));\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n            dispatch(setRegisterError('Invalid email address'));\r\n        } else if (password.length <= 7) {\r\n            dispatch(setRegisterError('Invalid password'));\r\n        } else if (password !== passwordCheck) {\r\n            dispatch(setRegisterError('Passwords must match'));\r\n        } else {\r\n            dispatch(register({email, password}));\r\n            dispatch(setRegisterError(''));\r\n        }\r\n    }\r\n\r\n    if (isRegistered) {\r\n        return <Navigate to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={commonStyles.wrapper}>\r\n            <section className={commonStyles.section}>\r\n                <article className={commonStyles.article}>\r\n                    <h3>Registration</h3>\r\n                    <div className={commonStyles.form}>\r\n                        <div>\r\n                            <SuperInputText\r\n                                onEnter={onSubmit}\r\n                                className={commonStyles.input}\r\n                                name={'email'}\r\n                                type={'text'}\r\n                                value={email}\r\n                                onChangeText={setEmail}\r\n                                placeholder={'Email'}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <SuperInputText\r\n                                onEnter={onSubmit}\r\n                                className={commonStyles.input}\r\n                                name={'password'}\r\n                                type={'password'}\r\n                                value={password}\r\n                                onChangeText={setPassword}\r\n                                placeholder={'Password'}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <SuperInputText\r\n                                onEnter={onSubmit}\r\n                                className={commonStyles.input}\r\n                                name={'passwordControl'}\r\n                                type={'password'}\r\n                                value={passwordCheck}\r\n                                onChangeText={setPasswordCheck}\r\n                                placeholder={'Password'}\r\n                            />\r\n                        </div>\r\n                        <div className={styles.btnWrapper}>\r\n                            <SuperButton className={commonStyles.button}>\r\n                                <Link to={'/login'}>Log in</Link>\r\n                            </SuperButton>\r\n                            <SuperButton\r\n                                className={commonStyles.button}\r\n                                onClick={onSubmit}\r\n                            >Sign in</SuperButton>\r\n                        </div>\r\n                    </div>\r\n                </article>\r\n                {error && <div className={styles.error}>{error}</div>}\r\n            </section>\r\n        </div>\r\n    );\r\n}","import { Dispatch } from \"redux\"\r\nimport {setAppLoading} from \"./appReducer\";\r\nimport {api} from \"../dal/api/api\";\r\nimport axios from \"axios\";\r\n\r\nexport type NewPassInitialStateType = {\r\n    setNewPassword: string,\r\n    error: string,\r\n}\r\n\r\nconst initialState: NewPassInitialStateType = {\r\n    setNewPassword: \"\",\r\n    error: \"\",\r\n}\r\n\r\nexport const newPassReducer = (state = initialState,\r\n                               action: NewPassActionsType): NewPassInitialStateType => {\r\n    switch (action.type) {\r\n        case \"NEW_PASS/SET-NEW-PASSWORD\":\r\n            return {...state, setNewPassword: action.info}\r\n        case \"NEW_PASS/SET-ERROR-RESPONSE\":\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport type NewPassActionsType =\r\n    ReturnType<typeof setNewPass>\r\n    | ReturnType<typeof errorResponse>\r\n\r\nexport const setNewPass = (info: string) => ({type: \"NEW_PASS/SET-NEW-PASSWORD\", info} as const);\r\nexport const errorResponse = (error: string) => ({type: \"NEW_PASS/SET-ERROR-RESPONSE\", error} as const);\r\n\r\nexport const createNewPassword = (newPassword: string, token: string) => async (dispatch: Dispatch) => {\r\n\r\n    dispatch(setAppLoading(true));\r\n\r\n    try {\r\n        const response = await api.setNewPassword(newPassword, token);\r\n        dispatch(setNewPass(response.data.info));\r\n    }\r\n    catch (error) {\r\n        if (axios.isAxiosError(error) && error.response) {\r\n            dispatch(errorResponse(error.response.data.error));\r\n        }\r\n    }\r\n    finally {\r\n        dispatch(setAppLoading(false));\r\n    }\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport commonStyles from \"../../../common/styles/commonStyles.module.css\";\r\nimport styles from \"./NewPass.module.css\"\r\nimport SuperInputText from \"../../../common/components/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../common/components/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {createNewPassword, errorResponse, NewPassInitialStateType} from \"../../../bll/newPassReducer\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\n\r\nexport const NewPass = () => {\r\n    const status = useSelector<AppStoreType, boolean>(state => state.app.loading);\r\n    const setNewPassState = useSelector<AppStoreType, NewPassInitialStateType>(state => state.newPassPage);\r\n    const dispatch = useDispatch();\r\n\r\n    const {token} = useParams();\r\n\r\n    const [newPassword, setNewPassword] = useState<string>(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState<string>(\"\");\r\n\r\n    const onChangeNewPassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setNewPassword(event.currentTarget.value);\r\n        dispatch(errorResponse(\"\"));\r\n    }\r\n\r\n    const onChangeCheckPassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setConfirmPassword(event.currentTarget.value);\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        if (!newPassword || !confirmPassword) {\r\n            dispatch(errorResponse('Password is required!'))\r\n        } else if (newPassword !== confirmPassword) {\r\n            dispatch(errorResponse('Passwords should be equal!'))\r\n        } else if (newPassword.length <= 7) {\r\n            dispatch(errorResponse('Invalid password'))\r\n        } else {\r\n            dispatch(createNewPassword(newPassword, token as string));\r\n            dispatch(errorResponse(''))\r\n        }\r\n    }\r\n\r\n    if (setNewPassState.setNewPassword) {\r\n        return <Navigate to={\"/login\"}/>;\r\n    }\r\n\r\n    return (\r\n        <div className={commonStyles.wrapper}>\r\n            <section className={commonStyles.section}>\r\n                <article className={commonStyles.article}>\r\n                    <h3>Create new password</h3>\r\n                    <div className={commonStyles.form}>\r\n                        <div>\r\n                            <SuperInputText\r\n                                onEnter={onSubmit}\r\n                                className={commonStyles.input}\r\n                                name={'new password'}\r\n                                type={'password'}\r\n                                value={newPassword}\r\n                                onChange={onChangeNewPassword}\r\n                                placeholder={'New password'}/>\r\n                            <SuperInputText\r\n                                onEnter={onSubmit}\r\n                                className={commonStyles.input}\r\n                                spanClassName={`${commonStyles.error} ${styles.error}`}\r\n                                name={'confirm password'}\r\n                                type={'password'}\r\n                                value={confirmPassword}\r\n                                onChange={onChangeCheckPassword}\r\n                                placeholder={'Confirm password'}\r\n                                error={setNewPassState.error}/>\r\n                        </div>\r\n                        <div>\r\n                            <SuperButton\r\n                                className={`${commonStyles.button} ${status && commonStyles.disabled} ${styles.button} `}\r\n                                onClick={onSubmit}\r\n                                disabled={status}>\r\n                                Create password\r\n                            </SuperButton>\r\n                        </div>\r\n                    </div>\r\n                </article>\r\n            </section>\r\n        </div>\r\n    );\r\n}","import axios from \"axios\";\r\nimport {Dispatch} from \"redux\";\r\nimport {api} from \"../dal/api/api\";\r\nimport {setAppLoading} from \"./appReducer\";\r\n\r\nconst initialState: PassRecoverInitialStateType = {\r\n    mailSent: \"\",\r\n    error: \"\",\r\n}\r\n\r\nexport const recoverPassReducer = (state = initialState,\r\n                                   action: RecoverPassActionsType): PassRecoverInitialStateType => {\r\n    switch (action.type) {\r\n        case \"PASS_RECOVER/SET-MAIL-SENT\":\r\n            return {...state, mailSent: action.info}\r\n        case \"PASS_RECOVER/SET-ERROR-RESPONSE\":\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const mailSent = (info: string) => ({type: \"PASS_RECOVER/SET-MAIL-SENT\", info} as const);\r\nexport const errorResponse = (error: string) => ({type: \"PASS_RECOVER/SET-ERROR-RESPONSE\", error} as const);\r\n\r\nexport const recoveryPass = (passRecoverMail: string) => async (dispatch: Dispatch) => {\r\n\r\n    dispatch(setAppLoading(true));\r\n\r\n    try {\r\n        const response = await api.forgotPassword(passRecoverMail);\r\n        dispatch(mailSent(response.data.info));\r\n    } catch (error) {\r\n        if (axios.isAxiosError(error) && error.response) {\r\n            dispatch(errorResponse(error.response.data.error));\r\n        }\r\n    } finally {\r\n        dispatch(setAppLoading(false));\r\n    }\r\n}\r\n\r\nexport type RecoverPassActionsType = ReturnType<typeof mailSent>\r\n    | ReturnType<typeof errorResponse>\r\n\r\nexport type PassRecoverInitialStateType = {\r\n    mailSent: string,\r\n    error: string,\r\n}\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport commonStyles from \"../../../common/styles/commonStyles.module.css\";\r\nimport styles from \"./PassRecover.module.css\";\r\nimport SuperInputText from \"../../../common/components/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../common/components/SuperButton/SuperButton\";\r\nimport {errorResponse, PassRecoverInitialStateType, recoveryPass} from \"../../../bll/passRecoverReducer\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\nexport const PassRecover = () => {\r\n    const status = useSelector<AppStoreType, boolean>(state => state.app.loading);\r\n    const recoverPassState = useSelector<AppStoreType, PassRecoverInitialStateType>(state => state.recoverPassPage);\r\n    const dispatch = useDispatch();\r\n\r\n    const [recoverPassMail, setRecoverPassMail] = useState<string>(\"\");\r\n\r\n    const onChangeEnterMail = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setRecoverPassMail(event.currentTarget.value);\r\n        dispatch(errorResponse(\"\"));\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        if (!recoverPassMail) {\r\n            dispatch(errorResponse('Email is required!'))\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(recoverPassMail)) {\r\n            dispatch(errorResponse('Invalid email address'));\r\n        } else {\r\n            dispatch(recoveryPass(recoverPassMail));\r\n            dispatch(errorResponse(''));\r\n        }\r\n    }\r\n\r\n    if (recoverPassState.mailSent) {\r\n        return <Navigate to={'/check-email'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={commonStyles.wrapper}>\r\n            <section className={commonStyles.section}>\r\n                <article className={commonStyles.article}>\r\n                    <h3>Password Recovery</h3>\r\n                    <div className={commonStyles.form}>\r\n                        <div>\r\n                            <SuperInputText\r\n                                onEnter={onSubmit}\r\n                                className={commonStyles.input}\r\n                                spanClassName={styles.error}\r\n                                name={'email'}\r\n                                type={'text'}\r\n                                value={recoverPassMail}\r\n                                onChange={onChangeEnterMail}\r\n                                placeholder={'Email'}\r\n                                error={recoverPassState.error}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <SuperButton\r\n                                className={`${commonStyles.button} ${styles.button} ${status ? commonStyles.disabled : ''}`}\r\n                                onClick={onSubmit}\r\n                                disabled={status}>\r\n                                Send instructions\r\n                            </SuperButton>\r\n                        </div>\r\n                    </div>\r\n                </article>\r\n            </section>\r\n        </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/noAvatar.6c53c0a1.png\";","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {setProfileError, updateProfile} from \"../../../bll/profileReducer\";\r\nimport commonStyles from \"../../../common/styles/commonStyles.module.css\";\r\nimport styles from \"./Profile.module.css\";\r\nimport SuperInputText from \"../../../common/components/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../common/components/SuperButton/SuperButton\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {logOut} from \"../../../bll/loginReducer\";\r\nimport noAvatar from '../../../common/images/noAvatar.png';\r\n\r\nexport const Profile = () => {\r\n    const dispatch = useDispatch();\r\n    const profileName = useSelector<AppStoreType, string>(state => state.profilePage.name);\r\n    const profileAvatar = useSelector<AppStoreType, string | undefined>(state => state.profilePage.avatar);\r\n    const profileEmail = useSelector<AppStoreType, string>(state => state.profilePage.email);\r\n    const error = useSelector<AppStoreType, string | undefined>(state => state.profilePage.error);\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.loginPage.isLoggedIn);\r\n\r\n    const [name, setName] = useState('')\r\n    const [avatar, setAvatar] = useState('')\r\n\r\n    const onSubmit = () => {\r\n        if (name && avatar) {\r\n            dispatch(updateProfile({name, avatar}));\r\n            setName('');\r\n            setAvatar('');\r\n        } else if (name) {\r\n            dispatch(updateProfile({name}));\r\n            setName('');\r\n        } else if (avatar) {\r\n            dispatch(updateProfile({avatar}));\r\n            setAvatar('');\r\n        } else {\r\n            dispatch(setProfileError('Name and avatar required!'));\r\n        }\r\n\r\n    }\r\n\r\n    const onLogout = () => {\r\n        dispatch(logOut());\r\n    }\r\n\r\n    if (!isLoggedIn) {\r\n        return <Navigate to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={commonStyles.wrapper}>\r\n            <section className={commonStyles.section}>\r\n                <article className={commonStyles.article}>\r\n                    <h3>Your profile</h3>\r\n                    <div className={commonStyles.form}>\r\n                        <div className={styles.avatar}>\r\n                            <img src={profileAvatar ? profileAvatar : noAvatar} alt=\"avatar\"/>\r\n                        </div>\r\n                        <div className={styles.info}>Name: {profileName}</div>\r\n                        <div className={styles.info}>Email: {profileEmail}</div>\r\n                        <div>\r\n                            <SuperInputText\r\n                                onEnter={onSubmit}\r\n                                type={'text'}\r\n                                className={commonStyles.input}\r\n                                placeholder={'Input new name'}\r\n                                value={name}\r\n                                onChangeText={setName}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <SuperInputText\r\n                                onEnter={onSubmit}\r\n                                type={'text'}\r\n                                className={commonStyles.input}\r\n                                spanClassName={`${commonStyles.error} ${styles.error}`}\r\n                                placeholder={'Input avatar link'}\r\n                                value={avatar}\r\n                                onChangeText={setAvatar}\r\n                                error={error}\r\n                            />\r\n                        </div>\r\n                        <div className={styles.btnWrapper}>\r\n                            <SuperButton\r\n                                className={commonStyles.button}\r\n                                onClick={onSubmit}>Change</SuperButton>\r\n                            <SuperButton\r\n                                className={commonStyles.button}\r\n                                onClick={onLogout}>LogOut</SuperButton>\r\n                        </div>\r\n                    </div>\r\n                </article>\r\n            </section>\r\n        </div>\r\n\r\n    );\r\n}","import styles from './LoadingLine.module.css'\r\n\r\nexport const LoadingLine = () => {\r\n  return (\r\n    <div className={styles.loadingLine}>\r\n      {/*<h3>Loading is in progress, do not rush, be patient</h3>*/}\r\n      <div className={styles.line}>\r\n        <div className={styles.shadow}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/checkMail.8bd711f4.png\";","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport checkMail from '../../../common/images/checkMail.png';\r\nimport s from './CheckMail.module.css';\r\nimport commonStyles from \"../../../common/styles/commonStyles.module.css\";\r\n\r\nexport const CheckEmail = () => {\r\n    const mailSent = useSelector<AppStoreType, string>(state => state.recoverPassPage.mailSent);\r\n\r\n    return (\r\n        <div className={commonStyles.wrapper}>\r\n            <section className={commonStyles.section}>\r\n                <article className={commonStyles.article}>\r\n                    <h3>Check your email</h3>\r\n                    <div className={`${commonStyles.form} ${s.message}`}>\r\n                            <img className={s.image} src={checkMail} alt={'checkMail'}/>\r\n                        Password recovery instructions have been {mailSent} to your email\r\n                    </div>\r\n                </article>\r\n            </section>\r\n        </div>\r\n    );\r\n}","import React, {useEffect} from 'react';\r\nimport {Navigate, Route, Routes} from 'react-router-dom';\r\nimport './App.css';\r\nimport Error404 from \"../pages/404/Error404\";\r\nimport {Login} from \"../pages/Login/Login\";\r\nimport {Registration} from \"../pages/Register/Registration\";\r\nimport {NewPass} from \"../pages/NewPass/NewPass\";\r\nimport {PassRecover} from \"../pages/PassRecover/PassRecover\";\r\nimport {Profile} from \"../pages/Profile/Profile\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../bll/store\";\r\nimport {LoadingLine} from \"../../common/components/LoadingLine/LoadingLine\";\r\nimport {CheckEmail} from \"../pages/CheckEmail/CheckEmail\";\r\nimport {initialize} from \"../../bll/appReducer\";\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch();\r\n    const loading = useSelector<AppStoreType, boolean>((state) => state.app.loading);\r\n    const initialized = useSelector<AppStoreType, boolean>((state) => state.app.initialized);\r\n\r\n    useEffect(() => {\r\n        dispatch(initialize());\r\n    }, [dispatch])\r\n\r\n    if (!initialized) {\r\n        return <LoadingLine/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"App\">\r\n                {loading && <LoadingLine/>}\r\n                <Routes>\r\n                    <Route path={'/'} element={<Login/>}/>\r\n                    <Route path={'login'} element={<Login/>}/>\r\n                    <Route path={'profile'} element={<Profile/>}/>\r\n                    <Route path={'registration'} element={<Registration/>}/>\r\n                    <Route path={'check-email'} element={<CheckEmail/>}/>\r\n                    <Route path={'set-new-password/:token'} element={<NewPass/>}/>\r\n                    <Route path={'pass_recovery'} element={<PassRecover/>}/>\r\n                    <Route path={'404'} element={<Error404/>}/>\r\n                    <Route path={'*'} element={<Navigate to={'404'}/>}/>\r\n                </Routes>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {loginReducer} from \"./loginReducer\";\r\nimport {newPassReducer} from \"./newPassReducer\";\r\nimport {recoverPassReducer} from \"./passRecoverReducer\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {registerReducer} from \"./registerReducer\";\r\nimport {appReducer} from \"./appReducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    loginPage: loginReducer,\r\n    newPassPage: newPassReducer,\r\n    recoverPassPage: recoverPassReducer,\r\n    profilePage: profileReducer,\r\n    registerPage: registerReducer,\r\n})\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\nexport type AppStoreType = ReturnType<typeof rootReducer>;\r\n\r\n//@ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './ui/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./bll/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App/>\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}